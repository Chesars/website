{
  "name": "leetcode",
  "slug": "doggybee__mcp-server-leetcode",
  "description": "A Model Context Protocol (MCP) server for LeetCode that provides access to problems, user data, and contest information through GraphQL",
  "readme": "# MCP Server LeetCode\n\n[![npm version](https://img.shields.io/npm/v/@mcpfun/mcp-server-leetcode.svg)](https://www.npmjs.com/package/@mcpfun/mcp-server-leetcode)\n[![GitHub license](https://img.shields.io/github/license/doggybee/mcp-server-leetcode.svg)](https://github.com/doggybee/mcp-server-leetcode/blob/main/LICENSE)\n[![Version](https://img.shields.io/badge/version-1.0.1-blue.svg)](https://github.com/doggybee/mcp-server-leetcode/releases)\n[![smithery badge](https://smithery.ai/badge/@doggybee/mcp-server-leetcode)](https://smithery.ai/server/@doggybee/mcp-server-leetcode)\n\nA Model Context Protocol (MCP) server for LeetCode that enables AI assistants to access LeetCode problems, user information, and contest data.\n\n## Features\n\n- üöÄ Fast access to LeetCode API\n- üîç Search problems, retrieve daily challenges, and check user profiles\n- üèÜ Query contest data and rankings\n- üß© Full support for MCP tools and resources\n- üì¶ Provides both CLI and programmable API\n\n## Installation\n\n### Installing via Smithery\n\nTo install mcp-server-leetcode for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@doggybee/mcp-server-leetcode):\n\n```bash\nnpx -y @smithery/cli install @doggybee/mcp-server-leetcode --client claude\n```\n\n### Global Installation\n\n```bash\nnpm install -g @mcpfun/mcp-server-leetcode\n```\n\nOnce installed, you can run it directly from the command line:\n\n```bash\nmcp-server-leetcode\n```\n\n### Local Installation\n\n```bash\nnpm install @mcpfun/mcp-server-leetcode\n```\n\n## Usage\n\n### Integration with Claude for Desktop\n\nAdd the following to your Claude for Desktop `claude_desktop_config.json` file:\n\n```json\n{\n  \"mcpServers\": {\n    \"leetcode\": {\n      \"command\": \"mcp-server-leetcode\"\n    }\n  }\n}\n```\n\nFor local development:\n\n```json\n{\n  \"mcpServers\": {\n    \"leetcode\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/dist/index.js\"]\n    }\n  }\n}\n```\n\n### Use as a Library\n\n```javascript\nimport { LeetCodeService } from '@mcpfun/mcp-server-leetcode';\n\n// Initialize the service\nconst leetcodeService = new LeetCodeService();\n\n// Get daily challenge\nconst dailyChallenge = await leetcodeService.getDailyChallenge();\n\n// Search problems\nconst problems = await leetcodeService.searchProblems({\n  difficulty: 'MEDIUM',\n  tags: 'array+dynamic-programming'\n});\n```\n\n## Available Tools\n\n### Problem-related Tools\n\n| Tool Name | Description | Parameters |\n|--------|------|------|\n| `get-daily-challenge` | Get the daily challenge | None |\n| `get-problem` | Get details for a specific problem | `titleSlug` (string) |\n| `search-problems` | Search for problems based on criteria | `tags` (optional), `difficulty` (optional), `limit` (default 20), `skip` (default 0) |\n\n### User-related Tools\n\n| Tool Name | Description | Parameters |\n|--------|------|------|\n| `get-user-profile` | Get user information | `username` (string) |\n| `get-user-submissions` | Get user submission history | `username` (string), `limit` (optional, default 20) |\n| `get-user-contest-ranking` | Get user contest rankings | `username` (string) |\n\n### Contest-related Tools\n\n| Tool Name | Description | Parameters |\n|--------|------|------|\n| `get-contest-details` | Get contest details | `contestSlug` (string) |\n\n## Available Resources\n\n### Problem Resources\n\n- `leetcode://daily-challenge`: Daily challenge\n- `leetcode://problem/{titleSlug}`: Problem details\n- `leetcode://problems{?tags,difficulty,limit,skip}`: Problem list\n\n### User Resources\n\n- `leetcode://user/{username}/profile`: User profile\n- `leetcode://user/{username}/submissions{?limit}`: User submissions\n- `leetcode://user/{username}/contest-ranking`: User contest ranking\n\n## Local Development\n\nClone the repository and install dependencies:\n\n```bash\ngit clone https://github.com/doggybee/mcp-server-leetcode.git\ncd mcp-server-leetcode\nnpm install\n```\n\nRun in development mode:\n\n```bash\nnpm run dev\n```\n\nBuild the project:\n\n```bash\nnpm run build\n```\n\n## License\n\nMIT\n\n## Related Projects\n\n- [Model Context Protocol](https://modelcontextprotocol.io) - MCP specifications and documentation\n- [Claude for Desktop](https://claude.ai/download) - AI assistant with MCP support\n\n## Acknowledgements\n\n- This project was inspired by [alfa-leetcode-api](https://github.com/alfaarghya/alfa-leetcode-api)\n",
  "category": null,
  "qualityScore": 72,
  "githubUrl": "https://github.com/doggybee/mcp-server-leetcode",
  "programmingLanguage": "TypeScript",
  "gitHubOrg": "doggybee",
  "gitHubRepo": "mcp-server-leetcode",
  "repositoryPath": null,
  "gh_stars": 18,
  "gh_contributors": 2,
  "gh_issues": 1,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "eedc0c8681ce94f6bee90c604a921c9b1f01c0ec",
  "last_scraped_at": "2025-07-29T19:08:35.580Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}