{
  "name": "octocode",
  "slug": "bgauryy__octocode-mcp",
  "description": "Code search analysys MCP",
  "readme": "# Octocode MCP\n\n**The Perfect AI Code Assistant - Advanced Search & Discovery Across GitHub**\n\n<div>\n  <img src=\"./assets/logo.png\" width=\"400px\">\n  \n  [![Version](https://img.shields.io/badge/version-3.0.0-blue.svg)](./package.json)\n  [![License](https://img.shields.io/badge/license-MIT-green.svg)](./package.json)\n  [![MCP](https://img.shields.io/badge/MCP-Compatible-purple.svg)](https://modelcontextprotocol.io/)\n  [![Discord](https://img.shields.io/badge/Discord-Join%20Community-5865F2.svg?logo=discord&logoColor=white)](https://discord.gg/beTNk8at)\n    [![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-☕-orange.svg)](https://buymeacoffee.com/bgauryy)\n\n</div>\n\n## 🌐 For More Details - [octocode.ai](https://octocode.ai)\n## 📚 For Technical Details - [Technical Summary](./docs/summary.md)\n## 🐳 For Docker Setup - [Docker Guide](./docker/README.Docker.md)\n## 💬 Join Our Community - [Discord](https://discord.gg/beTNk8at) - Follow this for useful updates and discussions\n\n**The perfect code assistant that can help understand anything.** Transform your AI assistant into an expert code researcher with instant access to millions of repositories and packages across GitHub and npm ecosystems.\n\nInstead of manually browsing repositories, ask questions like:\n- *\"How did React implement concurrent rendering?\"*\n- *\"Show me authentication patterns in Next.js applications\"*\n- *\"Find examples of how to use this specific API\"*\n- *\"What's the architecture of this library?\"*\n- *\"How do I use this MCP tool effectively?\"*\n\n## 🌟 Featured On\n\n### modelcontextprotocol/servers - Official Community MCP Server \n[![GitHub stars](https://img.shields.io/github/stars/modelcontextprotocol/servers?style=social)](https://github.com/modelcontextprotocol/servers)\n\n### Community Collections\n#### punkpeye/awesome-mcp-servers\n[![GitHub stars](https://img.shields.io/github/stars/punkpeye/awesome-mcp-servers?style=social)](https://github.com/punkpeye/awesome-mcp-servers)\n\n#### appcypher/awesome-mcp-servers\n[![GitHub stars](https://img.shields.io/github/stars/appcypher/awesome-mcp-servers?style=social)](https://github.com/appcypher/awesome-mcp-servers)\n\n#### Puliczek/awesome-mcp-security\n[![GitHub stars](https://img.shields.io/github/stars/Puliczek/awesome-mcp-security?style=social)](https://github.com/Puliczek/awesome-mcp-security)\n\n### MCP Directories & Tools\n[![MCP.so](https://img.shields.io/badge/MCP.so-Server%20Directory-green.svg?logo=web)](https://mcp.so/server/octocode/bgauryy)\n[![PulseMCP](https://img.shields.io/badge/PulseMCP-Server%20Registry-red.svg?logo=pulse)](https://www.pulsemcp.com/servers/bgauryy-octocode)\n[![DevTool.io](https://img.shields.io/badge/DevTool.io-Development%20Tool-teal.svg?logo=tools)](https://devtool.io/tool/octocode-mcp)\n\n## 🎯 Who Is This For?\n\n### For Developers\nNavigate complex multi-repo architectures, understand organizational issues at scale, and generate custom documentation on-demand from real code examples. Create contextual documentation directly in your IDE, or ask OctoCode to learn from any repository and implement similar patterns in your current project.\n\n### For Product & Engineering Managers\nGain unprecedented visibility into application behavior through semantic code search, track development progress across teams, and understand the real implementation behind product features.\n\n### For Security Researchers\nDiscover security patterns, vulnerabilities, and compliance issues across both public and private repositories with advanced pattern matching and cross-codebase analysis.\n\n### For Large Organizations\nDramatically increase development velocity by enabling teams to instantly learn from existing codebases, understand cross-team implementations, and replicate proven patterns—transforming institutional knowledge into actionable development acceleration.\n\n## 🚀 Key Benefits\n\n**Zero-Configuration Setup** - Works with existing GitHub CLI authentication, no personal access tokens needed\n\n**Enterprise-Ready Security** - Respects organizational permissions with content sanitization\n\n**AI Token Optimization** - Reduces AI costs by through intelligent content processing\n\n**Cross-Platform Excellence** - Native Windows PowerShell support with automatic path detection\n\n**Universal Access** - Works seamlessly with public, private, and organization repositories\n\n## Quick Start 🚀\n\n### 1. Install Prerequisites\n\n**macOS/Linux:**\n```bash\n# Install Node.js 18.12+\nbrew install node\n\n# Install GitHub CLI\nbrew install gh\n```\n\n**Windows:**\n```powershell\n# Install using WinGet (recommended)\nwinget install Microsoft.PowerShell  # PowerShell 7+ for better security\nwinget install GitHub.cli\nwinget install OpenJS.NodeJS\n\n# Or using Chocolatey\nchoco install powershell-core nodejs github-cli\n\n# Or using Scoop\nscoop install gh nodejs\n```\n\n### 2. Authenticate\n```bash\n# Login to GitHub (opens browser)\ngh auth login\n\n# Login to NPM (for package research)\nnpm login\n```\n\n### 3. Add to Claude Desktop\n```bash\n# For Claude Desktop users\nclaude mcp add octocode npx 'octocode-mcp@latest'\n```\n\n### Or Add to MCP Configuration Manually\n```json\n{\n  \"octocode-mcp\": {\n    \"command\": \"npx\",\n    \"args\": [\"octocode-mcp\"]\n  }\n}\n```\n\n**That's it!** Octocode automatically works with your organization's private repositories.\n\n## 🐳 Docker Support\n\nRun Octocode MCP in a Docker container while maintaining full GitHub CLI authentication. Perfect for consistent environments and deployment.\n\n[**See Docker Setup Guide →**](./docker/README.Docker.md)\n\n## 🛠️ What You Can Do\n\n### Deep Project Research & Analysis\n- **Issue Search & Analysis**: Understand project challenges, feature requests, and bug patterns\n- **Commit History Research**: Trace feature implementations and bug fixes across time\n- **Pull Request & Code Review Analysis**: Access actual code diffs and understand development workflows\n- **Project Progress Tracking**: Monitor development velocity and team collaboration patterns\n\n### Core GitHub Research\n- **Repository Discovery**: Find repositories by topic, language, and activity\n- **Code Search**: Find exact patterns and implementations across millions of repositories\n- **Cross-Repository Flow Understanding**: Connect related changes across multiple repositories\n- **Repository Architecture**: Navigate and understand project structures\n\n### Package Ecosystem Tools\n- **NPM Package Discovery**: Analyze Node.js packages with comprehensive metadata\n- **Python Package Integration**: Explore PyPI packages with cross-ecosystem comparison\n- **Package Analysis**: Deep-dive into versions, dependencies, and repository connections\n\n### Advanced Research Capabilities\n- **Code Pattern Discovery**: Identify implementation patterns and best practices\n- **Security & Compliance Research**: Search for security patterns across codebases\n- **Team Collaboration Analysis**: Understand code review processes and team dynamics\n- **Real-time Documentation**: Generate custom docs from live code for any topic\n\n> **📚 For detailed technical architecture, tool specifications, and implementation details, see [Technical Summary](./docs/summary.md)**\n\n## DXT Extension 📦\n\nThis project is available as a **Desktop Extension (DXT)** for easy installation in AI applications like Claude Desktop.\n\n### Quick DXT Setup\n\n```bash\n# Install dependencies\nyarn install\n\n# Build the DXT package\nyarn dxt:pack\n```\n\nThe generated `octocode-mcp.dxt` file can be installed in Claude Desktop by simply clicking on it.\n\n**DXT Scripts:**\n- `yarn dxt:validate` - Validate the manifest.json file\n- `yarn dxt:pack` - Build and package the extension\n- `yarn dxt:release` - Full release pipeline (build → pack → sign → verify)\n\n## Best Practices 💡\n\n**Ask Natural Questions:**\n- \"How does authentication work in this project?\"\n- \"What libraries implement this pattern?\"\n- \"Show me NPM packages that solve X problem\"\n- \"How has this approach evolved over time?\"\n\n**Let AI Guide Discovery:**\n- Start with broad queries - the system will intelligently narrow down\n- Trust the smart fallbacks - automatic retry with alternatives\n- Build on previous searches - maintain context for deeper exploration\n- Works everywhere - public, private, and organization repositories\n\n## Troubleshooting 🔧\n\n**Cross-Platform Commands:**\n```bash\n# Check GitHub CLI status\ngh auth status\n\n# Re-authenticate if needed\ngh auth logout && gh auth login\n\n# Check NPM access\nnpm whoami\n```\n\n**Windows-Specific:**\n```powershell\n# Check PowerShell version (7+ recommended)\n$PSVersionTable.PSVersion\n\n# Test executable detection\nwhere.exe gh\nwhere.exe npm\n```\n\n**Common Solutions:**\n- No results? Try broader search terms\n- Private repos not found? Check `gh auth status` for organization membership\n- Windows issues? Install PowerShell 7+ for better security\n- Permission errors? Check executable permissions and PATH configuration\n\n## Security & Privacy 🛡️\n\n### Local-First Architecture\n- **🏠 100% Local** - Runs entirely on your machine\n- **🚫 Zero Data Collection** - No telemetry or data transmission\n- **🔑 Safe Authentication** - Uses GitHub CLI OAuth, no personal tokens needed\n\n### Enterprise Security\n- **🛡️ Content Protection** - Input validation and content sanitization\n- **🔐 Secret Detection** - Automatic detection and redaction of sensitive data patterns\n- **⚪ Safe Commands Only** - Pre-approved GitHub CLI and NPM commands only\n\n> **📚 For comprehensive security architecture details, see [Technical Summary](./docs/summary.md)**\n\n## Background 💭\n\nThis project started as a personal tool while working at Wix, born from the challenge of navigating large codebases and keeping up with rapidly evolving technology landscapes. What began as a side project evolved into **the perfect code assistant that can help understand anything**.\n\nThe goal: **make code exploration as intelligent as having a senior developer guide you through any codebase.**\n\n## License 📄\n\nMIT License - See [LICENSE](./LICENSE.md) for details.\n\n---",
  "category": "Development",
  "qualityScore": 81,
  "githubUrl": "https://github.com/bgauryy/octocode-mcp",
  "programmingLanguage": "TypeScript",
  "gitHubOrg": "bgauryy",
  "gitHubRepo": "octocode-mcp",
  "repositoryPath": null,
  "gh_stars": 139,
  "gh_contributors": 2,
  "gh_issues": 2,
  "gh_releases": false,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "4f729fc2da9cc5870391d7ae5bf04560a49a3454",
  "last_scraped_at": "2025-07-29T19:18:00.335Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null,
  "configToRun": {
    "mcpServers": {
      "octocode-mcp": {
        "command": "npx",
        "args": [
          "octocode-mcp"
        ]
      }
    }
  }
}
