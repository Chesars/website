{
  "name": "shadcn ui",
  "slug": "jpisnice__shadcn-ui-mcp-server",
  "description": "A mcp server to allow LLMS gain context about shadcn ui component structure,usage and installation",
  "readme": "# Shadcn UI v4 MCP Server\n\n[![npm version](https://badge.fury.io/js/@jpisnice%2Fshadcn-ui-mcp-server.svg)](https://badge.fury.io/js/@jpisnice%2Fshadcn-ui-mcp-server)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nA Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to [shadcn/ui v4](https://ui.shadcn.com/) components, blocks, demos, and metadata. This server enables AI tools like Claude Desktop, Continue.dev, VS Code, Cursor, and other MCP-compatible clients to retrieve and work with shadcn/ui components seamlessly.\n\n## üöÄ Key Features\n\n- **Component Source Code**: Get the latest shadcn/ui v4 component TypeScript source\n- **Component Demos**: Access example implementations and usage patterns  \n- **Blocks Support**: Retrieve complete block implementations (dashboards, calendars, login forms, etc.)\n- **Metadata Access**: Get component dependencies, descriptions, and configuration details\n- **Directory Browsing**: Explore the shadcn/ui repository structure\n- **GitHub API Integration**: Efficient caching and intelligent rate limit handling\n\n## üì¶ Quick Start\n\n### ‚ö° Using npx (Recommended)\n\nThe fastest way to get started - no installation required!\n\n```bash\n# Basic usage (rate limited to 60 requests/hour)\nnpx @jpisnice/shadcn-ui-mcp-server\n\n# With GitHub token for better rate limits (5000 requests/hour)\nnpx @jpisnice/shadcn-ui-mcp-server --github-api-key ghp_your_token_here\n\n# Short form\nnpx @jpisnice/shadcn-ui-mcp-server -g ghp_your_token_here\n\n# Using environment variable\nexport GITHUB_PERSONAL_ACCESS_TOKEN=ghp_your_token_here\nnpx @jpisnice/shadcn-ui-mcp-server\n```\n\n**üéØ Try it now**: Run `npx @jpisnice/shadcn-ui-mcp-server --help` to see all options!\n\n### üîß Command Line Options\n\n```bash\nshadcn-ui-mcp-server [options]\n\nOptions:\n  --github-api-key, -g <token>    GitHub Personal Access Token\n  --help, -h                      Show help message  \n  --version, -v                   Show version information\n\nEnvironment Variables:\n  GITHUB_PERSONAL_ACCESS_TOKEN    Alternative way to provide GitHub token\n\nExamples:\n  npx @jpisnice/shadcn-ui-mcp-server --help\n  npx @jpisnice/shadcn-ui-mcp-server --version\n  npx @jpisnice/shadcn-ui-mcp-server -g ghp_1234567890abcdef\n  GITHUB_PERSONAL_ACCESS_TOKEN=ghp_token npx @jpisnice/shadcn-ui-mcp-server\n```\n\n## üîë GitHub API Token Setup\n\n**Why do you need a token?**\n- Without token: Limited to 60 API requests per hour\n- With token: Up to 5,000 requests per hour\n- Better reliability and faster responses\n\n### üìù Getting Your Token (2 minutes)\n\n1. **Go to GitHub Settings**:\n   - Visit [GitHub Settings ‚Üí Developer settings ‚Üí Personal access tokens ‚Üí Tokens (classic)](https://github.com/settings/tokens)\n   - Or: GitHub Profile ‚Üí Settings ‚Üí Developer settings ‚Üí Personal access tokens\n\n2. **Generate New Token**:\n   - Click \"Generate new token (classic)\"\n   - Add a note: \"shadcn-ui MCP server\"\n   - **Expiration**: Choose your preference (90 days recommended)\n   - **Scopes**: ‚úÖ **No scopes needed!** (public repository access is sufficient)\n\n3. **Copy Your Token**:\n   - Copy the generated token (starts with `ghp_`)\n   - ‚ö†Ô∏è **Save it securely** - you won't see it again!\n\n### üöÄ Using Your Token\n\n**Method 1: Command Line (Quick testing)**\n```bash\nnpx @jpisnice/shadcn-ui-mcp-server --github-api-key ghp_your_token_here\n```\n\n**Method 2: Environment Variable (Recommended)**\n```bash\n# Add to your shell profile (~/.bashrc, ~/.zshrc, etc.)\nexport GITHUB_PERSONAL_ACCESS_TOKEN=ghp_your_token_here\n\n# Then simply run:\nnpx @jpisnice/shadcn-ui-mcp-server\n```\n\n## üõ†Ô∏è Editor Integration\n\n### VS Code Integration\n\n#### Method 1: Using Continue Extension\n\n1. **Install Continue Extension**:\n   - Open VS Code\n   - Go to Extensions (Ctrl+Shift+X)\n   - Search for \"Continue\" and install it\n\n2. **Configure MCP Server**:\n   - Open Command Palette (Ctrl+Shift+P)\n   - Type \"Continue: Configure\" and select it\n   - Add this configuration to your settings:\n\n```json\n{\n  \"continue.server\": {\n    \"mcpServers\": {\n      \"shadcn-ui\": {\n        \"command\": \"npx\",\n        \"args\": [\"@jpisnice/shadcn-ui-mcp-server\", \"--github-api-key\", \"ghp_your_token_here\"]\n      }\n    }\n  }\n}\n```\n\n#### Method 2: Using Claude Extension\n\n1. **Install Claude Extension**:\n   - Search for \"Claude\" in VS Code extensions\n   - Install the official Claude extension\n\n2. **Configure MCP Server**:\n   - Add to your VS Code settings.json:\n\n```json\n{\n  \"claude.mcpServers\": {\n    \"shadcn-ui\": {\n      \"command\": \"npx\",\n      \"args\": [\"@jpisnice/shadcn-ui-mcp-server\"],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"ghp_your_token_here\"\n      }\n    }\n  }\n}\n```\n\n### Cursor Integration\n\n#### Method 1: Global Configuration\n\n1. **Open Cursor Settings**:\n   - Go to Settings (Cmd/Ctrl + ,)\n   - Search for \"MCP\" or \"Model Context Protocol\"\n\n2. **Add MCP Server Configuration**:\n```json\n{\n  \"mcpServers\": {\n    \"shadcn-ui\": {\n      \"command\": \"npx\",\n      \"args\": [\"@jpisnice/shadcn-ui-mcp-server\", \"--github-api-key\", \"ghp_your_token_here\"]\n    }\n  }\n}\n```\n\n#### Method 2: Workspace Configuration\n\nCreate a `.cursorrules` file in your project root:\n\n```json\n{\n  \"mcpServers\": {\n    \"shadcn-ui\": {\n      \"command\": \"npx\",\n      \"args\": [\"@jpisnice/shadcn-ui-mcp-server\"],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"ghp_your_token_here\"\n      }\n    }\n  }\n}\n```\n\n### Claude Desktop Integration\n\nAdd to your Claude Desktop configuration (`~/.config/Claude/claude_desktop_config.json`):\n\n```json\n{\n  \"mcpServers\": {\n    \"shadcn-ui\": {\n      \"command\": \"npx\",\n      \"args\": [\"@jpisnice/shadcn-ui-mcp-server\", \"--github-api-key\", \"ghp_your_token_here\"]\n    }\n  }\n}\n```\n\nOr with environment variable:\n\n```json\n{\n  \"mcpServers\": {\n    \"shadcn-ui\": {\n      \"command\": \"npx\",\n      \"args\": [\"@jpisnice/shadcn-ui-mcp-server\"],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"ghp_your_token_here\"\n      }\n    }\n  }\n}\n```\n\n### Continue.dev Integration\n\n1. **Install Continue.dev**:\n   - Download from [continue.dev](https://continue.dev)\n   - Install the application\n\n2. **Configure MCP Server**:\n   - Open Continue.dev\n   - Go to Settings ‚Üí MCP Servers\n   - Add new server:\n\n```json\n{\n  \"name\": \"shadcn-ui\",\n  \"command\": \"npx\",\n  \"args\": [\"@jpisnice/shadcn-ui-mcp-server\", \"--github-api-key\", \"ghp_your_token_here\"]\n}\n```\n\n## üéØ Usage Examples\n\n### Getting Component Source Code\n\nAsk your AI assistant:\n```\n\"Show me the source code for the shadcn/ui button component\"\n```\n\nThe AI can now access the complete TypeScript source code for the button component.\n\n### Creating a Dashboard\n\nAsk your AI assistant:\n```\n\"Create a dashboard using shadcn/ui components. Use the dashboard-01 block as a starting point\"\n```\n\nThe AI can retrieve the complete dashboard block implementation and customize it for your needs.\n\n### Building a Login Form\n\nAsk your AI assistant:\n```\n\"Help me build a login form using shadcn/ui components. Show me the available form components\"\n```\n\nThe AI can list all available components and help you build the form.\n\n## üõ†Ô∏è Available Tools\n\nThe MCP server provides these tools for AI assistants:\n\n### Component Tools\n\n- **`get_component`** - Get component source code\n- **`get_component_demo`** - Get component usage examples\n- **`list_components`** - List all available components\n- **`get_component_metadata`** - Get component dependencies and info\n\n### Block Tools\n\n- **`get_block`** - Get complete block implementations (dashboard-01, calendar-01, etc.)\n- **`list_blocks`** - List all available blocks with categories\n\n### Repository Tools\n\n- **`get_directory_structure`** - Explore the shadcn/ui repository structure\n\n### Example Tool Usage\n\n```typescript\n// These tools can be called by AI assistants via MCP protocol\n\n// Get button component source\n{\n  \"tool\": \"get_component\",\n  \"arguments\": { \"componentName\": \"button\" }\n}\n\n// List all components\n{\n  \"tool\": \"list_components\",\n  \"arguments\": {}\n}\n\n// Get dashboard block\n{\n  \"tool\": \"get_block\", \n  \"arguments\": { \"blockName\": \"dashboard-01\" }\n}\n```\n\n## üêõ Troubleshooting\n\n### Common Issues\n\n**\"Rate limit exceeded\" errors:**\n```bash\n# Solution: Add GitHub API token\nnpx @jpisnice/shadcn-ui-mcp-server --github-api-key ghp_your_token_here\n```\n\n**\"Command not found\" errors:**\n```bash\n# Solution: Install Node.js 18+ and ensure npx is available\nnode --version  # Should be 18+\nnpx --version   # Should work\n```\n\n**Component not found:**\n```bash\n# Check available components first\nnpx @jpisnice/shadcn-ui-mcp-server\n# Then call list_components tool via your MCP client\n```\n\n**Network/proxy issues:**\n```bash\n# Set proxy if needed\nexport HTTP_PROXY=http://your-proxy:8080\nexport HTTPS_PROXY=http://your-proxy:8080\nnpx @jpisnice/shadcn-ui-mcp-server\n```\n\n**Editor not recognizing MCP server:**\n```bash\n# Verify the server is running\nnpx @jpisnice/shadcn-ui-mcp-server --help\n\n# Check your editor's MCP configuration\n# Ensure the command and args are correct\n```\n\n### Debug Mode\n\nEnable verbose logging:\n\n```bash\n# Set debug environment variable\nDEBUG=* npx @jpisnice/shadcn-ui-mcp-server --github-api-key ghp_your_token\n```\n\n## üìÑ License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## ü§ù Contributing\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## üìû Support\n\n- üêõ [Report Issues](https://github.com/Jpisnice/shadcn-ui-mcp-server/issues)\n- üí¨ [Discussions](https://github.com/Jpisnice/shadcn-ui-mcp-server/discussions)\n- üìñ [Documentation](https://github.com/Jpisnice/shadcn-ui-mcp-server#readme)\n- üì¶ [npm Package](https://www.npmjs.com/package/@jpisnice/shadcn-ui-mcp-server)\n\n## üîó Related Projects\n\n- [shadcn/ui](https://ui.shadcn.com/) - The component library this server provides access to\n- [Model Context Protocol](https://modelcontextprotocol.io/) - The protocol specification\n- [MCP TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk) - Official MCP SDK\n\n## ‚≠ê Acknowledgments\n\n- [shadcn](https://github.com/shadcn) for the amazing UI component library\n- [Anthropic](https://anthropic.com) for the Model Context Protocol specification\n- The open source community for inspiration and contributions\n\n---\n\n**Made with ‚ù§Ô∏è by [Janardhan Polle](https://github.com/Jpisnice)**\n\n**Star ‚≠ê this repo if you find it helpful!**",
  "category": null,
  "qualityScore": 90,
  "githubUrl": "https://github.com/Jpisnice/shadcn-ui-mcp-server",
  "programmingLanguage": "TypeScript",
  "gitHubOrg": "Jpisnice",
  "gitHubRepo": "shadcn-ui-mcp-server",
  "repositoryPath": null,
  "gh_stars": 1045,
  "gh_contributors": 1,
  "gh_issues": 12,
  "gh_releases": true,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "588c5e5800accce0c0e96807f4568b192c8c1d3e",
  "last_scraped_at": "2025-07-29T19:17:31.124Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}