{
  "name": "Python Runtime Interpreter",
  "slug": "hileamlakb__prims",
  "description": "PRIMS is a lightweight, open-source Model Context Protocol (MCP) server that lets LLM agents safely execute arbitrary Python code in a secure, throw-away sandbox.",
  "readme": "<p align=\"left\">\n  <img src=\"primslogo.png\" alt=\"PRIMS Logo\" width=\"200\"/>\n  <a href=\"#\"><img src=\"https://img.shields.io/badge/status-alpha-orange?style=for-the-badge\" alt=\"Status: Alpha\"/></a>\n  <a href=\"LICENSE\"><img src=\"https://img.shields.io/badge/license-MIT-blue?style=for-the-badge\" alt=\"License: MIT\"/></a>\n</p>\n\n# PRIMS – Python Runtime Interpreter MCP Server\n\nPRIMS is a tiny open-source **Model Context Protocol (MCP)** server that lets LLM agents run arbitrary Python code in a secure, throw-away sandbox.\n\n•   **One tool, one job.**  Exposes a single MCP tool – `run_code` – that executes user-supplied Python and streams back `stdout / stderr`.\n\n•   **Isolated & reproducible.**  Each call spins up a fresh virtual-env, installs any requested pip packages, mounts optional read-only files, then nukes the workspace.\n\n•   **Zero config.**  Works over MCP/stdio or drop it in Docker.\n\n---\n\n## Quick-start\n\n### 1. Local development environment\n\n```bash\nchmod +x scripts/setup_env.sh   # once, to make the script executable\n./scripts/setup_env.sh          # creates .venv & installs deps\n\n# activate the venv in each new shell\nsource .venv/bin/activate\n```\n\n### 2. Launch the server\n\n```bash\npython -m server.main         # binds http://0.0.0.0:9000/mcp\n```\n\n### 3. Docker\n\n```bash\n# Quick one-liner (build + run)\nchmod +x scripts/docker_run.sh\n./scripts/docker_run.sh         # prints the MCP URL when ready\n```\n\n\n## Examples\n\n### List available tools\n\nYou can use the provided script to list all tools exposed by the server:\n\n```bash\npython examples/list_tools.py\n```\n\nExpected output (tool names and descriptions may vary):\n\n```\nAvailable tools:\n- run_code: Execute Python code in a secure sandbox with optional dependencies & file mounts.\n- list_dir: List files/directories in your session workspace.\n- preview_file: Preview up to 8 KB of a text file from your session workspace.\n- persist_artifact: Upload an output/ file to a presigned URL for permanent storage.\n- mount_file: Download a remote file once per session to `mounts/<path>`.\n```\n\n### Run code via the MCP server\n\n```bash\npython examples/run_code.py\n```\n\n### Mount a dataset once & reuse it\n\n```bash\npython examples/mount_and_run.py\n```\n\nThis mounts a CSV with `mount_file` and then reads it inside `run_code` without re-supplying the URL.\n\n### Inspect your session workspace\n\n```bash\npython examples/inspect_workspace.py\n```\n\nThis shows how to use the **`list_dir`** and **`preview_file`** tools to browse files your code created.\n\n### Persist an artifact to permanent storage\n\nThe **`persist_artifact`** tool uploads a file from your `output/` directory to a presigned URL.\n\nExample (Python):\n\n```python\nawait client.call_tool(\"persist_artifact\", {\n    \"relative_path\": \"plots/plot.png\",\n    \"presigned_url\": \"https://bucket.s3.amazonaws.com/...signature...\",\n})\n```\n\n### Download an artifact\n\nSmall artifacts can be fetched directly:\n\n```bash\ncurl -H \"mcp-session-id: <your-session-id>\" \\\n     http://localhost:9000/artifacts/plots/plot.png -o plot.png\n```\n\n---\n\n## Available tools\n\n| Tool                | Purpose |\n|---------------------|---------------------------------------------------------------|\n| `run_code`          | Execute Python in an isolated sandbox with optional pip deps. |\n| `list_dir`          | List files/directories inside your session workspace.        |\n| `preview_file`      | Return up to 8 KB of a text file for quick inspection.        |\n| `persist_artifact`  | Upload an `output/` file to a client-provided presigned URL. |\n| `mount_file`        | Download a remote file once per session to `mounts/<path>`. |\n\nSee the `examples/` directory for end-to-end demos.\n\n## Contributing\nContributions are welcome! Feel free to open issues, suggest features, or submit pull requests to help improve PRIMS.\n\n\nIf you find this project useful, please consider leaving a ⭐ to show your support.\n",
  "category": null,
  "qualityScore": 73,
  "githubUrl": "https://github.com/hileamlakB/PRIMS",
  "programmingLanguage": "Python",
  "gitHubOrg": "hileamlakB",
  "gitHubRepo": "PRIMS",
  "repositoryPath": null,
  "gh_stars": 10,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "d646e1f57ee9d9bf79515f39482e46dc65e525e7",
  "last_scraped_at": "2025-07-29T19:08:16.345Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}