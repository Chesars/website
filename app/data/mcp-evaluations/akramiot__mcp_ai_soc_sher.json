{
  "name": "_AI_SOC_Sher",
  "slug": "akramiot__mcp_ai_soc_sher",
  "description": "AI SOC  Security Threat analysis using  MCP Server ",
  "readme": "# MCP AI SOC Sher\n\nA powerful AI-driven Security Operations Center (SOC) Text2SQL framework  based  MCP Server (Local and Remote) for converting natural language Prompts  to SQL queries dynamically, with integrated security threat analysis and monitoring.\n\n## Features\n\n- **Text2SQL Conversion**: Convert natural language queries to optimized SQL\n- **Multiple Interfaces**: Support for STDIO, SSE, and REST API\n- **Security Threat Analysis**: Built-in SQL query security analysis\n- **Multiple Database Support**: Connect to SQLite or Snowflake databases\n- **Streaming Responses**: Real-time query processing feedback\n- **SOC Monitoring**: Security Operations Center monitoring capabilities\n\n## Installation\n\n```bash\npip install mcp-ai-soc-sher\n```\n\n## Quick Start\n\n```python\n# Set your OpenAI API key\nimport os\nos.environ[\"OPENAI_API_KEY\"] = \"your-api-key-here\"\n\n# Use as local server\nfrom mcp_ai_soc_sher.local import LocalMCPServer\n\nserver = LocalMCPServer()\nserver.start()\n\n# Or run from command line\n# mcp-ai-soc --type local --stdio --sse\n```\n\n## Command Line Usage\n\n```bash\n# Run local server with STDIO interface\nmcp-ai-soc --type local --stdio\n\n# Run local server with SSE interface\nmcp-ai-soc --type local --sse\n\n# Run remote server with REST API\nmcp-ai-soc --type remote\n```\n\n## Configuration\n\nCreate a `.env` file with your configuration:\n\n```\nOPENAI_API_KEY=your_openai_api_key_here\nMCP_DB_URI=sqlite:///your_database.db\nMCP_SECURITY_ENABLE_THREAT_ANALYSIS=true\n```\n\nSee the [documentation](docs/configuration.md) for all configuration options.\n\n## Example\n\n```python\nimport json\nimport requests\n\n# Query the server\nresponse = requests.post(\n    \"http://localhost:8000/api/sql\",\n    headers={\"Content-Type\": \"application/json\", \"X-API-Key\": \"your-api-key\"},\n    json={\n        \"query\": \"Find all suspicious login attempts in the last 24 hours\",\n        \"optimize\": True,\n        \"execute\": True\n    }\n)\n\n# Process the response\nresult = response.json()\nprint(f\"SQL Query: {result['sql']}\")\nif result['results']:\n    print(\"Results:\")\n    for row in result['results']:\n        print(row)\n```\n\n## Security Features\n\n- Rule-based and AI-powered SQL query security analysis\n- Detection of potential SQL injection attacks\n- Sensitive table access monitoring\n- Configurable security levels and actions\n\n## License\n\nMIT License with Additional Conditions. Copyright (c) 2025 Akram Sheriff.\n\nSee [LICENSE](LICENSE) for details.\n\n## Contributing\n\nContributions are welcome! Please see [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.\n",
  "category": null,
  "qualityScore": 73,
  "githubUrl": "https://github.com/akramIOT/MCP_AI_SOC_Sher",
  "programmingLanguage": "Python",
  "gitHubOrg": "akramIOT",
  "gitHubRepo": "MCP_AI_SOC_Sher",
  "repositoryPath": null,
  "gh_stars": 1,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "e23ecc6ee6fb9ee0a93c9c904d7dd8e537455ebf",
  "last_scraped_at": "2025-07-29T19:15:17.825Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}