{
  "name": "ai toolkit",
  "slug": "memgraph__ai-toolkit__integrations__mcp-memgraph",
  "description": "MCP server from memgraph/ai-toolkit",
  "readme": "# Memgraph AI Toolkit\n\nA unified mono-repo for integrating AI-powered graph tools on top of [Memgraph](https://memgraph.com/).  \nThis repository contains the following libraries:\n\n1. [**memgraph-toolbox**](/memgraph-toolbox/)\n   Core Python utilities and CLI tools for querying and analyzing a Memgraph database. The package is available on the [PyPi](https://pypi.org/project/memgraph-toolbox/)\n\n2. [**langchain-memgraph**](/integrations/langchain-memgraph/)\n   A LangChain integration package, exposing Memgraph operations as LangChain tools and toolkits. The package is available on the [PyPi](https://pypi.org/project/langchain-memgraph/)\n\n3. [**mcp-memgraph**](/integrations/mcp-memgraph/)\n   An MCP (Model Context Protocol) server implementation, exposing Memgraph tools over a lightweight STDIO protocol. The package is available on the [PyPi](https://pypi.org/project/mcp-memgraph/)\n\n## Usage examples\n\nFor individual examples on how to use the toolbox, LangChain, or MCP, refer to our documentation:\n\n- [Langchain examples](https://memgraph.com/docs/ai-ecosystem/integrations#langchain)\n- [MCP examples](https://memgraph.com/docs/ai-ecosystem/integrations#model-context-protocol-mcp)\n\n## Developing locally\n\nYou can build and test each package directly from your repo. First, start a Memgraph MAGE instance with schema info enabled:\n\n```bash\ndocker run -p 7687:7687 \\\n  --name memgraph \\\n  memgraph/memgraph-mage:latest \\\n  --schema-info-enabled=true\n```\n\nOnce Memgraph is running, install any package in “editable” mode and run its test suite. For example, to test the core toolbox:\n\n```\nuv pip install -e memgraph-toolbox[test]\npytest -s memgraph-toolbox/src/memgraph_toolbox/tests\n```\n\n### Core tests\n\nTo test the core toolbox, just run:\n\n```\nuv pip install -e memgraph-toolbox[test]\npytest -s memgraph-toolbox/src/memgraph_toolbox/tests\n```\n\n### Langchain integration tests\n\nTo run the LangChain tests, create a .env file with your OPENAI_API_KEY, as the tests depend on LLM calls:\n\n```\nuv pip install -e integrations/langchain-memgraph[test]\npytest -s integrations/langchain-memgraph/tests\n```\n\n### MCP integration tests\n\n```\nuv pip install -e integrations/mcp-memgraph[test]\npytest -s integrations/mcp-memgraph/tests\n```\n\nIf you are running any test on MacOS in zsh, add `\"\"` to the command:\n\n```\nuv pip install -e memgraph-toolbox\"[test]\"\n```\n",
  "category": null,
  "qualityScore": 86,
  "githubUrl": "https://github.com/memgraph/ai-toolkit/tree/main/integrations/mcp-memgraph",
  "programmingLanguage": "Python",
  "gitHubOrg": "memgraph",
  "gitHubRepo": "ai-toolkit",
  "repositoryPath": "integrations/mcp-memgraph",
  "gh_stars": 27,
  "gh_contributors": 4,
  "gh_issues": 15,
  "gh_releases": true,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "b119f91894b5cb7b453eb365ed76ccafb4307762",
  "last_scraped_at": "2025-07-29T19:13:09.332Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}