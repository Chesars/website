{
  "name": "NyxDocs",
  "slug": "nyxn-ai__nyxdocs",
  "description": "Cryptocurrency Documentation MCP Server - AI-powered documentation collection and management system for blockchain projects",
  "readme": "# NyxDocs - Cryptocurrency Documentation MCP Server\n\n[![Python](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)\n[![MCP](https://img.shields.io/badge/MCP-compatible-green.svg)](https://modelcontextprotocol.io)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n\nNyxDocs is a specialized Model Context Protocol (MCP) server that provides comprehensive documentation management for cryptocurrency projects. Built with Python and inspired by Context7's architecture, it offers real-time access to crypto project documentation, blockchain information, and development resources.\n\n## 🚀 Features\n\n### Core Capabilities\n- **Multi-Blockchain Support**: Ethereum, BSC, Polygon, Solana, and more\n- **Real-time Documentation**: Automatically discovers and updates project docs\n- **Smart Search**: Find projects by name, category, or blockchain\n- **Content Extraction**: Supports GitHub, GitBook, Notion, and official websites\n- **Update Monitoring**: Tracks documentation changes automatically\n\n### MCP Tools\n- `search_crypto_projects`: Search cryptocurrency projects by various criteria\n- `get_project_info`: Detailed project information with blockchain context\n- `get_documentation`: Retrieve actual documentation content\n- `list_blockchains`: Available blockchain networks\n- `check_updates`: Recent documentation updates\n\n## 🏗️ Architecture\n\n```\n┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐\n│   Data Sources  │    │   NyxDocs Core   │    │   MCP Client    │\n│                 │    │                  │    │                 │\n│ • CoinGecko API │────│ • Project DB     │────│ • Claude        │\n│ • GitHub API    │    │ • Doc Scraper    │    │ • Cursor        │\n│ • GitBook       │    │ • Update Monitor │    │ • VS Code       │\n│ • Notion        │    │ • MCP Server     │    │ • Other Clients │\n└─────────────────┘    └──────────────────┘    └─────────────────┘\n```\n\n### Key Components\n\n1. **MCP Server Core**: FastMCP-based server handling protocol communication\n2. **Data Collectors**: Modules for gathering project information from various APIs\n3. **Documentation Scrapers**: Intelligent content extraction from different sources\n4. **Database Layer**: SQLite/PostgreSQL for storing projects and documentation\n5. **Update Monitors**: Background tasks for tracking documentation changes\n\n## 📦 Installation\n\n### Prerequisites\n- Python 3.11+\n- uv (recommended) or pip\n\n### Quick Start\n\n```bash\n# Clone the repository\ngit clone https://github.com/nyxn-ai/NyxDocs.git\ncd NyxDocs\n\n# Install with uv (recommended)\nuv sync\n\n# Or install with pip\npip install -e .\n\n# Set up environment\ncp .env.example .env\n# Edit .env with your API keys\n\n# Initialize database\nuv run python -m nyxdocs.database.init\n\n# Start the server\nuv run python -m nyxdocs.server\n```\n\n### MCP Client Configuration\n\n#### Cursor\n```json\n{\n  \"mcpServers\": {\n    \"nyxdocs\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"-m\", \"nyxdocs.server\"]\n    }\n  }\n}\n```\n\n#### Claude Desktop\n```json\n{\n  \"mcpServers\": {\n    \"nyxdocs\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"-m\", \"nyxdocs.server\"]\n    }\n  }\n}\n```\n\n## 🔧 Configuration\n\n### Environment Variables\n\n```env\n# API Keys\nCOINGECKO_API_KEY=your_coingecko_api_key\nGITHUB_TOKEN=your_github_token\n\n# Database\nDATABASE_URL=sqlite:///nyxdocs.db\n# Or for PostgreSQL: postgresql://user:pass@localhost/nyxdocs\n\n# Server Settings\nLOG_LEVEL=INFO\nUPDATE_INTERVAL=3600  # seconds\nMAX_CONCURRENT_SCRAPES=5\n```\n\n### Supported Data Sources\n\n- **CoinGecko**: Market data and project information\n- **GitHub**: Repository documentation and README files\n- **GitBook**: Hosted documentation platforms\n- **Notion**: Project documentation pages\n- **Official Websites**: Direct documentation scraping\n\n## 🛠️ Usage Examples\n\n### Search for DeFi Projects\n```python\n# In your MCP client\nsearch_crypto_projects(query=\"uniswap\", category=\"DeFi\", blockchain=\"ethereum\")\n```\n\n### Get Project Documentation\n```python\nget_documentation(project=\"uniswap\", format=\"markdown\")\n```\n\n### Monitor Updates\n```python\ncheck_updates(since=\"2024-01-01\", limit=10)\n```\n\n## 🧪 Development\n\n### Project Structure\n```\nNyxDocs/\n├── nyxdocs/\n│   ├── __init__.py\n│   ├── server.py              # Main MCP server\n│   ├── collectors/            # Data collection modules\n│   ├── scrapers/              # Documentation scrapers\n│   ├── database/              # Database models and operations\n│   ├── tools/                 # MCP tool implementations\n│   └── utils/                 # Utility functions\n├── tests/                     # Test suite\n├── docs/                      # Documentation\n├── pyproject.toml            # Project configuration\n└── README.md\n```\n\n### Running Tests\n```bash\nuv run pytest\n```\n\n### Code Quality\n```bash\nuv run ruff check\nuv run mypy nyxdocs\n```\n\n## 📚 Documentation\n\n- [API Reference](docs/api.md)\n- [Configuration Guide](docs/configuration.md)\n- [Development Setup](docs/development.md)\n- [Contributing Guidelines](CONTRIBUTING.md)\n\n## 🤝 Contributing\n\nWe welcome contributions! Please see our [Contributing Guidelines](CONTRIBUTING.md) for details.\n\n## 📄 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## 🙏 Acknowledgments\n\n- Inspired by [Context7](https://github.com/upstash/context7) by Upstash\n- Built with [Python MCP SDK](https://github.com/modelcontextprotocol/python-sdk)\n- Cryptocurrency data provided by CoinGecko API\n\n---\n\n**NyxDocs** - Making cryptocurrency project documentation accessible and up-to-date for AI assistants.\n",
  "category": null,
  "qualityScore": 68,
  "githubUrl": "https://github.com/nyxn-ai/NyxDocs",
  "programmingLanguage": "Python",
  "gitHubOrg": "nyxn-ai",
  "gitHubRepo": "NyxDocs",
  "repositoryPath": null,
  "gh_stars": 3,
  "gh_contributors": 0,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "ca76dd1df42d35c3f6be9e26fcba06d66efe841c",
  "last_scraped_at": "2025-07-31T20:48:56.868Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}