{
  "name": "vikingdb",
  "slug": "kashiwabyte__vikingdb-mcp-server",
  "description": "a mcp server for vikingdb store and search",
  "readme": "# VikingDB MCP server\n\n[![smithery badge](https://smithery.ai/badge/mcp-server-vikingdb)](https://smithery.ai/server/mcp-server-vikingdb)\nan mcp server for vikingdb store and search\n\n## What is VikingDB\nVikingDB is a high-performance vector database developed by ByteDance. \n\nYou can easily use it following the doc bellow:\nhttps://www.volcengine.com/docs/84313/1254444\n\n\n\n### Tools\n\nThe server implements the following tools:\n\n- vikingdb-colleciton-intro: introduce the collection of vikingdb\n\n- vikingdb-index-intro: introduce the index of vikingdb\n\n- vikingdb-upsert-information: upsert information to vikingdb for later use\n\n- vikingdb-search-information: searche for information in the VikingDB\n  \n  \n## Configuration\n\n- vikingdb_host: The host to use for the VikingDB server.\n\n- vikingdb_region: The region to use for the VikingDB server.\n \n - vikingdb_ak: The Access Key to use for the VikingDB server.\n\n - vikingdb_sk: The Secret Key to use for the VikingDB server.\n \n- collection_name: The name of the collection to use.\n\n- index_name: The name of the index to use.\n\n\n## Quickstart\n\n### Install\n\n### Installing via Smithery\n\nTo install VikingDB MCP server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/mcp-server-vikingdb):\n\n```bash\nnpx -y @smithery/cli install mcp-server-vikingdb --client claude\n```\n\n#### Claude Desktop\n\nOn MacOS: `~/Library/Application\\ Support/Claude/claude_desktop_config.json`\n\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n\nDevelopment/Unpublished Servers Configuration\n```\n{\n  \"mcpServers\": {\n    \"mcp-server-vikingdb\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"dir to mcp-server-vikingdb\",\n        \"run\",\n        \"mcp-server-vikingdb\",\n        \"--vikingdb-host\", \n        \"your host\",\n        \"--vikingdb-region\", \n        \"your region\",\n        \"--vikingdb-ak\", \n        \"your access key\",\n        \"--vikingdb-sk\", \n        \"your secret key\",\n        \"--collection-name\",\n        \"your collection name\",\n        \"--index-name\",\n        \"your index name\"\n      ]\n    }\n  }\n}\n\n  ```\n\nPublished Servers Configuration\n  ```\n{\n    \"mcpServers\": {\n      \"mcp-server-vikingdb\": {\n        \"command\": \"uvx\",\n        \"args\": [\n          \"mcp-server-vikingdb\",\n          \"--vikingdb-host\", \n          \"your host\",\n          \"--vikingdb-region\", \n          \"your region\",\n          \"--vikingdb-ak\", \n          \"your access key\",\n          \"--vikingdb-sk\", \n          \"your secret key\",\n          \"--collection-name\",\n          \"your collection name\",\n          \"--index-name\",\n          \"your index name\"\n      ]\n     }\n    }\n  } \n  ```\n\n\n## Development\n\n### Building and Publishing\n\nTo prepare the package for distribution:\n\n1. Sync dependencies and update lockfile:\n```bash\nuv sync\n```\n\n2. Build package distributions:\n```bash\nuv build\n```\n\nThis will create source and wheel distributions in the `dist/` directory.\n\n3. Publish to PyPI:\n```bash\nuv publish\n```\n\nNote: You'll need to set PyPI credentials via environment variables or command flags:\n- Token: `--token` or `UV_PUBLISH_TOKEN`\n- Or username/password: `--username`/`UV_PUBLISH_USERNAME` and `--password`/`UV_PUBLISH_PASSWORD`\n\n### Debugging\n\nSince MCP servers run over stdio, debugging can be challenging. For the best debugging\nexperience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).\n\n\nYou can launch the MCP Inspector via [`npm`](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) with this command:\n\n```bash\nnpx @modelcontextprotocol/inspector uv --directory dir_to_mcp_server_vikingdb run mcp-server-vikingdb --vikingdb-host your_host --vikingdb-region your_region --vikingdb-ak your_access_key --vikingdb-sk your_secret_key --collection-name your_collection_name --index-name your_index_name\n```\n\n\nUpon launching, the Inspector will display a URL that you can access in your browser to begin debugging.\n",
  "category": null,
  "qualityScore": 75,
  "githubUrl": "https://github.com/KashiwaByte/vikingdb-mcp-server",
  "programmingLanguage": "Python",
  "gitHubOrg": "KashiwaByte",
  "gitHubRepo": "vikingdb-mcp-server",
  "repositoryPath": null,
  "gh_stars": 3,
  "gh_contributors": 2,
  "gh_issues": 3,
  "gh_releases": true,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "d712b9d968bfc5c17d0625900080cc533d188e0e",
  "last_scraped_at": "2025-07-29T19:12:58.904Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}