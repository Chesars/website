{
  "name": "amazon ads",
  "slug": "marketplaceadpros__amazon-ads-mcp-server",
  "description": "MCP Server to interact with Amazon Ads",
  "readme": "# amazon-ads-mcp-server\n\nConnect to your Amazon Advertising Data by integrating your account with [MarketplaceAdPros](https://marketplaceadpros.com).\n\nProvides access to:\n\n- Advertising Resources in Sponsored Products, Sponsored Brands and Sponsored Display, like Campaigns, Ad Groups, Keywords, Product Ads, Targeting\n- Reports and ability to query them with plain english.\n- Marketplace Ad Pros Recommendations, Experiments and more with purchased subscription plan\n\nAlso available as a Streamable HTTP MCP Server by connecting to `https://app.marketplaceadpros.com/mcp`\n\n## Installation\n\nTo add the amazon-ads-mcp-server to your MCP client of choice, add the following to the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n### Env Vars\n\n- `BEARER_TOKEN`: The Bearer token you got from MarketplaceAdPros.com\n\n\n### Configuration\n\nYou can use it via `npx` in your Claude Desktop configuration like this:\n\n```json\n{\n  \"mcpServers\": {\n    \"marketplaceadpros\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"@marketplaceadpros/amazon-ads-mcp-server\"\n      ],\n      \"env\": {\n        \"BEARER_TOKEN\": \"abcdefghijklmnop\"\n      }\n    }\n  }\n}\n```\n\n\nOr, if you clone the repo, you can build and use in your Claude Desktop configuration like this:\n\n\n```json\n\n{\n  \"mcpServers\": {\n    \"marketplaceadpros\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/path/to/amazon-ads-mcp-server/build/index.js\"\n      ],\n      \"env\": {\n        \"BEARER_TOKEN\": \"abcdefghijklmnop\"\n      }\n    }\n  }\n}\n```\n\n\nOr, if your client supports the Streamable HTTP MCP Servers, you can just point to the MCP endpoint at `https://app.marketplaceadpros.com/mcp`. \n\n\n```json\n\n{\n  \"mcpServers\": {\n    \"marketplaceadpros\": {\n      \"type\": \"streamable-http\",\n      \"url\": \"https://app.marketplaceadpros.com/mcp\"\n    }\n  }\n}\n```\n\n\nOr, configure in [LibreChat](https://www.librechat.ai/) like:\n```yaml\n  MAP:\n    type: streamable-http\n    url: https://app.marketplaceadpros.com/mcp\n    headers:\n      Authorization: \"Bearer abcdefghijklmnop\"\n````\n\n\n## Development\n\nInstall dependencies:\n```bash\nnpm install\n```\n\nBuild the server:\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n```bash\nnpm run watch\n```\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\n![amazon-ads-mcp-server live in inspector](img/inspector.png)\n\nThe Inspector will provide a URL to access debugging tools in your browser.\n\n### Acknowledgements\n\n- Obviously the modelcontextprotocol and Anthropic teams for the MCP Specification. [https://modelcontextprotocol.io/introduction](https://modelcontextprotocol.io/introduction)\n- [MarketplaceAdPros](https://marketplaceadpros.com?ref=github-amazon-ads-mcp-server) for enabling and sponsoring this project.\n",
  "category": null,
  "qualityScore": 68,
  "githubUrl": "https://github.com/MarketplaceAdPros/amazon-ads-mcp-server",
  "programmingLanguage": "JavaScript",
  "gitHubOrg": "MarketplaceAdPros",
  "gitHubRepo": "amazon-ads-mcp-server",
  "repositoryPath": null,
  "gh_stars": 7,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "87915ee9d94a2a0a0f340a3cb5a69c8880422474",
  "last_scraped_at": "2025-07-31T20:48:53.769Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}