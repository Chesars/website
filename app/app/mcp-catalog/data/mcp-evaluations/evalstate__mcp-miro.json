{
  "name": "miro",
  "slug": "evalstate__mcp-miro",
  "description": "MCP server from evalstate/mcp-miro",
  "readme": "# mcp-miro MCP Server\n[![smithery badge](https://smithery.ai/badge/@llmindset/mcp-miro)](https://smithery.ai/server/@llmindset/mcp-miro)\n\nA Model Context Protocol server to connect to the MIRO Whiteboard Application.\n\n- Allows Board manipulation, sticky creation, bulk operations and more.\n- Pass your OAuth key as an Environment Variable, or using the \"--token\" argument.\n- Taking a photo of stickies and asking Claude to create MIRO equivalent works _really_ well.\n\n<a href=\"https://glama.ai/mcp/servers/gr5t7vthv3\"><img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/gr5t7vthv3/badge\" alt=\"mcp-miro MCP server\" /></a>\n\n## Installation\n\n### Installing via Smithery\n\nTo install MIRO Whiteboard Connector for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@llmindset/mcp-miro):\n\n```bash\nnpx -y @smithery/cli install @llmindset/mcp-miro --client claude\n```\n\n### Using mcp-get\n\nYou can install this package using mcp-get:\n\n```bash\nnpx @michaellatman/mcp-get@latest install @llmindset/mcp-miro\n```\n\n_Note - if you are using an old version of Windows PowerShell, you may need to run_ `Set-ExecutionPolicy Bypass -Scope Process` _before this command._\n\n## Features\n\n![MIRO/Claude Desktop Screenshot](./2024-12-02-screenshot_1.png)\n\n### Resources\n- Get Board Contents \n\n### Tools\n- Create Sticky, Shape\n- Read Board, Frame, Contents\n- Bulk Create\n\n### Prompts\n- Instruct on Board Coordinates etc.\n\n## Development\n\nInstall dependencies:\n```bash\nnpm install\n```\n\nBuild the server:\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n```bash\nnpm run watch\n```\n\n## Installation\n\nTo use with Claude Desktop, add the server config:\n\nOn MacOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\nOn Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-miro\": {\n      \"command\": \"/path/to/node-or-npx\",\n      \"arguments\": [\n        \"/path/to/mcp-miro/build/index.js\",\n        \"--token\",\"MIRO-OAUTH-KEY\"\n      ]\n    }\n  }\n}\n```\n\n### Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser.\n\nIn Dev environment recommend adding https://github.com/miroapp/api-clients/blob/041de24ebf7955432b447d887ede066ad4c7e2c7/packages/generator/spec.json for reference.\n",
  "category": null,
  "qualityScore": 74,
  "githubUrl": "https://github.com/evalstate/mcp-miro",
  "programmingLanguage": "TypeScript",
  "gitHubOrg": "evalstate",
  "gitHubRepo": "mcp-miro",
  "repositoryPath": null,
  "gh_stars": 75,
  "gh_contributors": 3,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "a8be11ed8794f420375093931224a598e91a39d3",
  "last_scraped_at": "2025-07-31T20:49:04.588Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}