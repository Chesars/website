{
  "name": "influxdb",
  "slug": "idoru__influxdb-mcp-server",
  "description": "An MCP Server for querying InfluxDB",
  "readme": "[![MseeP Badge](https://mseep.net/pr/idoru-influxdb-mcp-server-badge.jpg)](https://mseep.ai/app/idoru-influxdb-mcp-server)\n\n# InfluxDB MCP Server\n\n[![smithery badge](https://smithery.ai/badge/@idoru/influxdb-mcp-server)](https://smithery.ai/server/@idoru/influxdb-mcp-server)\n\nA Model Context Protocol (MCP) server that exposes access to an InfluxDB instance using the InfluxDB OSS API v2. Mostly built with Claude Code.\n\n## Features\n\nThis MCP server provides:\n\n- **Resources**: Access to organization, bucket, and measurement data\n- **Tools**: Write data, execute queries, and manage database objects\n- **Prompts**: Templates for common Flux queries and Line Protocol format\n\n## Resources\n\nThe server exposes the following resources:\n\n1. **Organizations List**: `influxdb://orgs`\n   - Displays all organizations in the InfluxDB instance\n\n2. **Buckets List**: `influxdb://buckets`\n   - Shows all buckets with their metadata\n\n3. **Bucket Measurements**: `influxdb://bucket/{bucketName}/measurements`\n   - Lists all measurements within a specified bucket\n\n4. **Query Data**: `influxdb://query/{orgName}/{fluxQuery}`\n   - Executes a Flux query and returns results as a resource\n\n## Tools\n\nThe server provides these tools:\n\n1. `write-data`: Write time-series data in line protocol format\n   - Parameters: org, bucket, data, precision (optional)\n\n2. `query-data`: Execute Flux queries\n   - Parameters: org, query\n\n3. `create-bucket`: Create a new bucket\n   - Parameters: name, orgID, retentionPeriodSeconds (optional)\n\n4. `create-org`: Create a new organization\n   - Parameters: name, description (optional)\n\n## Prompts\n\nThe server offers these prompt templates:\n\n1. `flux-query-examples`: Common Flux query examples\n2. `line-protocol-guide`: Guide to InfluxDB line protocol format\n\n## Configuration\n\nThe server requires these environment variables:\n\n- `INFLUXDB_TOKEN` (required): Authentication token for the InfluxDB API\n- `INFLUXDB_URL` (optional): URL of the InfluxDB instance (defaults to `http://localhost:8086`)\n- `INFLUXDB_ORG` (optional): Default organization name for certain operations\n\n## Installation\n\n### Installing via Smithery\n\nTo install InfluxDB MCP Server for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@idoru/influxdb-mcp-server):\n\n```bash\nnpx -y @smithery/cli install @idoru/influxdb-mcp-server --client claude\n```\n\n### Option 1: Run with npx (recommended)\n\n```bash\n# Run directly with npx\nINFLUXDB_TOKEN=your_token npx influxdb-mcp-server\n```\n\n### Option 2: Install globally\n\n```bash\n# Install globally\nnpm install -g influxdb-mcp-server\n\n# Run the server\nINFLUXDB_TOKEN=your_token influxdb-mcp-server\n```\n\n### Option 3: From source\n\n```bash\n# Clone the repository\ngit clone https://github.com/idoru/influxdb-mcp-server.git\ncd influxdb-mcp-server\n\n# Install dependencies\nnpm install\n\n# Run the server\nINFLUXDB_TOKEN=your_token npm start\n```\n\n## Integration with Claude for Desktop\n\nAdd the server to your `claude_desktop_config.json`:\n\n### Using npx (recommended)\n\n```json\n{\n  \"mcpServers\": {\n    \"influxdb\": {\n      \"command\": \"npx\",\n      \"args\": [\"influxdb-mcp-server\"],\n      \"env\": {\n        \"INFLUXDB_TOKEN\": \"your_token\",\n        \"INFLUXDB_URL\": \"http://localhost:8086\",\n        \"INFLUXDB_ORG\": \"your_org\"\n      }\n    }\n  }\n}\n```\n\n### If installed locally\n\n```json\n{\n  \"mcpServers\": {\n    \"influxdb\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/influxdb-mcp-server/src/index.js\"],\n      \"env\": {\n        \"INFLUXDB_TOKEN\": \"your_token\",\n        \"INFLUXDB_URL\": \"http://localhost:8086\",\n        \"INFLUXDB_ORG\": \"your_org\"\n      }\n    }\n  }\n}\n```\n\n## Code Structure\n\nThe server code is organized into a modular structure:\n\n- `src/`\n  - `index.js` - Main server entry point\n  - `config/` - Configuration related files\n    - `env.js` - Environment variable handling\n  - `utils/` - Utility functions\n    - `influxClient.js` - InfluxDB API client\n    - `loggerConfig.js` - Console logger configuration\n  - `handlers/` - Resource and tool handlers\n    - `organizationsHandler.js` - Organizations listing\n    - `bucketsHandler.js` - Buckets listing\n    - `measurementsHandler.js` - Measurements listing\n    - `queryHandler.js` - Query execution\n    - `writeDataTool.js` - Data write tool\n    - `queryDataTool.js` - Query tool\n    - `createBucketTool.js` - Bucket creation tool\n    - `createOrgTool.js` - Organization creation tool\n  - `prompts/` - Prompt templates\n    - `fluxQueryExamplesPrompt.js` - Flux query examples\n    - `lineProtocolGuidePrompt.js` - Line protocol guide\n\nThis structure allows for better maintainability, easier testing, and clearer separation of concerns.\n\n## Testing\n\nThe repository includes comprehensive integration tests that:\n\n- Spin up a Docker container with InfluxDB\n- Populate it with sample data\n- Test all MCP server functionality\n\nTo run the tests:\n\n```bash\nnpm test\n```\n\n## License\n\nMIT\n",
  "category": null,
  "qualityScore": 82,
  "githubUrl": "https://github.com/idoru/influxdb-mcp-server",
  "programmingLanguage": "JavaScript",
  "gitHubOrg": "idoru",
  "gitHubRepo": "influxdb-mcp-server",
  "repositoryPath": null,
  "gh_stars": 22,
  "gh_contributors": 3,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "9c2b2aa527f61d11c404faee2ae028ae1ed4f325",
  "last_scraped_at": "2025-08-01T13:16:39.500Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}