{
  "name": "HarmonyOS",
  "slug": "xixianliang__harmonyos-mcp-server",
  "description": "MCP server for manipulating HarmonyOS next devices.",
  "readme": "<div align=\"center\">\n<h1>HarmonyOS MCP Server</h1>\n\n <a href='LICENSE'><img src='https://img.shields.io/badge/License-MIT-orange'></a> &nbsp;&nbsp;&nbsp;\n <a><img src='https://img.shields.io/badge/python-3.13-blue'></a>\n</div>\n\n<div align=\"center\">\n    <img style=\"max-width: 500px; width: 60%;\" width=\"1111\" alt=\"image\" src=\"https://github.com/user-attachments/assets/7c2e6879-f583-48d7-b467-c4c6d99c5fab\" />\n</div>\n\n## Intro\n\nThis is a MCP server for manipulating harmonyOS Device.\n\n\nhttps://github.com/user-attachments/assets/7af7f5af-e8c6-4845-8d92-cd0ab30bfe17\n\n\n## Quick Start\n\n### Installation\n\n1. Clone this repo\n   \n```bash\ngit clone https://github.com/XixianLiang/HarmonyOS-mcp-server.git\ncd HarmonyOS-mcp-server\n```\n\n2. Setup the envirnment.\n\n```bash\nuv python install 3.13\nuv sync\n```\n\n### Usage\n\nYou can use [Claude Desktop](https://modelcontextprotocol.io/quickstart/user) to try our tool.\n\n\nYou can also use [openai-agents SDK](https://openai.github.io/openai-agents-python/mcp/) to try the mcp server. Here's an example\n\n```python\n\"\"\"\nExample: Use Openai-agents SDK to call HarmonyOS-mcp-server\n\"\"\"\nimport asyncio\nimport os\n\nfrom agents import Agent, Runner, gen_trace_id, trace\nfrom agents.mcp import MCPServerStdio, MCPServer\n\nasync def run(mcp_server: MCPServer):\n    agent = Agent(\n        name=\"Assistant\",\n        instructions=\"Use the tools to manipulate the HarmonyOS device and finish the task.\",\n        mcp_servers=[mcp_server],\n    )\n\n    message = \"Launch the app `settings` on the phone\"\n    print(f\"Running: {message}\")\n    result = await Runner.run(starting_agent=agent, input=message)\n    print(result.final_output)\n\n\nasync def main():\n\n    # Use async context manager to initialize the server\n    async with MCPServerStdio(\n        params={\n            \"command\": \"<...>/bin/uv\",\n            \"args\": [\n                \"--directory\",\n                \"<...>/harmonyos-mcp-server\",\n                \"run\",\n                \"server.py\"\n            ]\n        }\n    ) as server:\n        trace_id = gen_trace_id()\n        with trace(workflow_name=\"MCP HarmonyOS\", trace_id=trace_id):\n            print(f\"View trace: https://platform.openai.com/traces/trace?trace_id={trace_id}\\n\")\n            await run(server)\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n",
  "category": null,
  "qualityScore": 77,
  "githubUrl": "https://github.com/XixianLiang/HarmonyOS-mcp-server",
  "programmingLanguage": "Python",
  "gitHubOrg": "XixianLiang",
  "gitHubRepo": "HarmonyOS-mcp-server",
  "repositoryPath": null,
  "gh_stars": 18,
  "gh_contributors": 2,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "35d05cfedaddc21c4ed753ef89ce9072421632dd",
  "last_scraped_at": "2025-08-01T13:16:58.448Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}