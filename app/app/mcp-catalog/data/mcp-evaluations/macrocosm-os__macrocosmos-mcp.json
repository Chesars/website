{
  "name": "macrocosmos",
  "slug": "macrocosm-os__macrocosmos-mcp",
  "description": "The MCP for macrocosmos subnets. ",
  "readme": "# üåå Macrocosmos MCP\n\n**Macrocosmos MCP** lets you integrate **SN13** and **SN1** APIs directly into **Claude for Desktop** or **Cursor**. Instantly tap into social data, perform live web searches, and explore Hugging Face models ‚Äî all from within your AI environment.\n\n---\n\n## ‚ö° Features\n\n- üîç Query **X** (Twitter) and **Reddit** data on demand\n- üìö Explore **SN13 Hugging Face** repositories and datasets\n\n---\n\n## üöÄ Quick Setup\n\n### 1. Clone the Repo\n\n```bash\ngit clone https://github.com/macrocosm-os/macrocosmos-mcp.git\ncd macrocosmos-mcp/src\n```\n\n### 2. Install Requirements (requires [uv](https://astral.sh/blog/uv/))\n\n```bash\nuv venv\nsource .venv/bin/activate\nuv add \"mcp[cli]\" httpx macrocosmos\n```\n\n### 3. Configure Claude or Cursor\n\nOpen the MCP config file:\n\n- **Claude:** `~/Library/Application Support/Claude/claude_desktop_config.json`\n- **Cursor:** `~/Library/Application Support/Cursor/cursor_mcp_config.json`\n\nAdd this entry:\n\n```json\n\"macrocosmos\": {\n    \"command\": \"uv\",\n    \"args\": [\n        \"--directory\",\n        \"/full_path_to_repo/macrocosmos_mcp/src/\",\n        \"run\",\n        \"macrocosmos_mcp.py\"\n    ],\n    \"env\": {\n        \"MC_API\": \"\",\n    }\n}\n```\n\nReplace `/full_path_to_repo/` with your full local path and insert your API keys.\n\n---\n\n## üîÆ Upcoming\n\n- üß† All the power of **Subnets** in your AI environment ‚Äî coming soon.\n\n---\n\nMIT License\nMade with ‚ù§Ô∏è by the Macrocosm OS team\n",
  "category": null,
  "qualityScore": 75,
  "githubUrl": "https://github.com/macrocosm-os/macrocosmos-mcp",
  "programmingLanguage": "Python",
  "gitHubOrg": "macrocosm-os",
  "gitHubRepo": "macrocosmos-mcp",
  "repositoryPath": null,
  "gh_stars": 10,
  "gh_contributors": 2,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "fdaba8dd396c0d51499732269071015aa2c7e332",
  "last_scraped_at": "2025-07-31T20:49:00.011Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}