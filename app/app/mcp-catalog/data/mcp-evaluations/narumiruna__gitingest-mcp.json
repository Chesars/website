{
  "name": "gitingest",
  "slug": "narumiruna__gitingest-mcp",
  "description": "MCP server from narumiruna/gitingest-mcp",
  "readme": "# Gitingest MCP Server\n\nA Model Context Protocol (MCP) server implementation that integrates with [gitingest](https://github.com/cyclotruc/gitingest) for turning any Git repository into a simple text digest of its codebase.\n\n<a href=\"https://glama.ai/mcp/servers/@narumiruna/gitingest-mcp\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@narumiruna/gitingest-mcp/badge\" alt=\"Gitingest Server MCP server\" />\n</a>\n\n## Features\n\n- Easy integration with AI assistants through the Model Context Protocol\n- Git repository analysis and ingestion capabilities\n- Support for filtering files by size, patterns, and branches\n- Returns comprehensive repository information including summaries, file structure, and content\n\n## Usage\n\n### Configuration Options\n\nAdd the following configuration to your AI assistant's settings to enable gitingest-mcp as an MCP server:\n\n#### PyPI Installation\n\n```json\n{\n  \"mcpServers\": {\n    \"gitingestmcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\"gitingestmcp@latest\"]\n    }\n  }\n}\n```\n\n#### GitHub Installation\n\n```json\n{\n  \"mcpServers\": {\n    \"gitingestmcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"--from\",\n        \"git+https://github.com/narumiruna/gitingest-mcp\",\n        \"gitingestmcp\"\n      ]\n    }\n  }\n}\n```\n\n#### Local Installation\n\n```json\n{\n  \"mcpServers\": {\n    \"gitingestmcp\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"run\",\n        \"--directory\",\n        \"/home/<user>/workspace/gitingest-mcp\",\n        \"gitingestmcp\"\n      ]\n    }\n  }\n}\n```\n\n## API\n\nThe server provides the following tool:\n\n### `ingest_git`\n\nAnalyzes a Git repository and returns its content in a structured format.\n\n#### Parameters:\n\n- `source`: The URL of a Git repository or a local directory path\n- `max_file_size` (optional): Maximum allowed file size in bytes (default: 10MB)\n- `include_patterns` (optional): Pattern or set of patterns specifying files to include (e.g., \"\\*.md, src/\")\n- `exclude_patterns` (optional): Pattern or set of patterns specifying files to exclude\n- `branch` (optional): The branch to clone and analyze (default: \"main\")\n\n#### Returns:\n\nA string containing:\n\n1. Repository summary\n2. Tree-like structure of the files\n3. Content of the repository files\n\n## Resources\n\n- gitingest website: https://gitingest.com/\n- gitingest repository: https://github.com/cyclotruc/gitingest\n\n## License\n\nSee the [LICENSE](LICENSE) file for details.\n",
  "category": null,
  "qualityScore": 75,
  "githubUrl": "https://github.com/narumiruna/gitingest-mcp",
  "programmingLanguage": "Python",
  "gitHubOrg": "narumiruna",
  "gitHubRepo": "gitingest-mcp",
  "repositoryPath": null,
  "gh_stars": 4,
  "gh_contributors": 2,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "9a01cedfa2bd5e96d234e3969a8247e65c369e61",
  "last_scraped_at": "2025-08-01T13:16:55.544Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}