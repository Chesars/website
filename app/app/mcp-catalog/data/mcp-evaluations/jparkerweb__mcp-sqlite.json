{
  "name": "sqlite",
  "slug": "jparkerweb__mcp-sqlite",
  "description": "üêá Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities",
  "readme": "# üêá MCP SQLite Server\r\nThis is a Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities.\r\n\r\n![cursor-settings](https://raw.githubusercontent.com/jparkerweb/mcp-sqlite/refs/heads/main/.readme/mcp-sqlite.jpg)\r\n\r\n#### Maintained by\r\n<a href=\"https://www.equilllabs.com\">\r\n  <img src=\"https://raw.githubusercontent.com/jparkerweb/eQuill-Labs/refs/heads/main/src/static/images/logo-text-outline.png\" alt=\"eQuill Labs\" height=\"32\">\r\n</a>\r\n\r\n## Features\r\n- Complete CRUD operations (Create, Read, Update, Delete)\r\n- Database exploration and introspection\r\n- Execute custom SQL queries\r\n\r\n## Setup\r\n\r\nDefine the command in your IDE's MCP Server settings:\r\n\r\ne.g. `Cursor`:\r\n```json\r\n{\r\n    \"mcpServers\": {\r\n        \"MCP SQLite Server\": {\r\n            \"command\": \"npx\",\r\n            \"args\": [\r\n                \"-y\",\r\n                \"mcp-sqlite\",\r\n                \"<path-to-your-sqlite-database.db>\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ne.g. `VSCode`:\r\n```json\r\n{\r\n    \"servers\": {\r\n        \"MCP SQLite Server\": {\r\n            \"type\": \"stdio\",\r\n            \"command\": \"npx\",\r\n            \"args\": [\r\n                \"-y\",\r\n                \"mcp-sqlite\",\r\n                \"<path-to-your-sqlite-database.db>\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n![cursor-settings](https://raw.githubusercontent.com/jparkerweb/mcp-sqlite/refs/heads/main/.readme/cursor-mcp-settings.jpg)\r\n\r\nYour database path must be provided as an argument.\r\n\r\n## Available Tools\r\n\r\n### Database Information\r\n\r\n#### db_info\r\n\r\nGet detailed information about the connected database.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"db_info\",\r\n    \"arguments\": {}\r\n  }\r\n}\r\n```\r\n\r\n#### list_tables\r\n\r\nList all tables in the database.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"list_tables\",\r\n    \"arguments\": {}\r\n  }\r\n}\r\n```\r\n\r\n#### get_table_schema\r\n\r\nGet detailed information about a table's schema.\r\n\r\nParameters:\r\n- `tableName` (string): Name of the table\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"get_table_schema\",\r\n    \"arguments\": {\r\n      \"tableName\": \"users\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### CRUD Operations\r\n\r\n#### create_record\r\n\r\nInsert a new record into a table.\r\n\r\nParameters:\r\n- `table` (string): Name of the table\r\n- `data` (object): Record data as key-value pairs\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"create_record\",\r\n    \"arguments\": {\r\n      \"table\": \"users\",\r\n      \"data\": {\r\n        \"name\": \"John Doe\",\r\n        \"email\": \"john@example.com\",\r\n        \"age\": 30\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### read_records\r\n\r\nQuery records from a table with optional filtering.\r\n\r\nParameters:\r\n- `table` (string): Name of the table\r\n- `conditions` (object, optional): Filter conditions as key-value pairs\r\n- `limit` (number, optional): Maximum number of records to return\r\n- `offset` (number, optional): Number of records to skip\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"read_records\",\r\n    \"arguments\": {\r\n      \"table\": \"users\",\r\n      \"conditions\": {\r\n        \"age\": 30\r\n      },\r\n      \"limit\": 10,\r\n      \"offset\": 0\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### update_records\r\n\r\nUpdate records in a table that match specified conditions.\r\n\r\nParameters:\r\n- `table` (string): Name of the table\r\n- `data` (object): New values as key-value pairs\r\n- `conditions` (object): Filter conditions as key-value pairs\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"update_records\",\r\n    \"arguments\": {\r\n      \"table\": \"users\",\r\n      \"data\": {\r\n        \"email\": \"john.updated@example.com\"\r\n      },\r\n      \"conditions\": {\r\n        \"id\": 1\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### delete_records\r\n\r\nDelete records from a table that match specified conditions.\r\n\r\nParameters:\r\n- `table` (string): Name of the table\r\n- `conditions` (object): Filter conditions as key-value pairs\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"delete_records\",\r\n    \"arguments\": {\r\n      \"table\": \"users\",\r\n      \"conditions\": {\r\n        \"id\": 1\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Custom Queries\r\n\r\n#### query\r\n\r\nExecute a custom SQL query against the connected SQLite database.\r\n\r\nParameters:\r\n- `sql` (string): The SQL query to execute\r\n- `values` (array, optional): Array of parameter values to use in the query\r\n\r\nExample:\r\n```json\r\n{\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"query\",\r\n    \"arguments\": {\r\n      \"sql\": \"SELECT * FROM users WHERE id = ?\",\r\n      \"values\": [1]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## Built with\r\n\r\n- [Model Context Protocol SDK](https://github.com/modelcontextprotocol/typescript-sdk)\r\n- [sqlite3](https://github.com/TryGhost/node-sqlite3)\r\n\r\n---\r\n\r\n## Appreciation\r\nIf you enjoy this library please consider sending me a tip to support my work üòÄ\r\n### [üçµ tip me here](https://ko-fi.com/jparkerweb)\r\n",
  "category": null,
  "qualityScore": 75,
  "githubUrl": "https://github.com/jparkerweb/mcp-sqlite",
  "programmingLanguage": "JavaScript",
  "gitHubOrg": "jparkerweb",
  "gitHubRepo": "mcp-sqlite",
  "repositoryPath": null,
  "gh_stars": 31,
  "gh_contributors": 1,
  "gh_issues": 1,
  "gh_releases": true,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "1d6662d79810a862e3914a7bf332cf70c6827c99",
  "last_scraped_at": "2025-07-29T19:12:56.456Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}