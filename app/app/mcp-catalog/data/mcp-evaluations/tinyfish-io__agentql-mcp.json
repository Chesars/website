{
  "name": "agentql",
  "slug": "tinyfish-io__agentql-mcp",
  "description": "Model Context Protocol server that integrates AgentQL's data extraction capabilities.",
  "readme": "# AgentQL MCP Server\n\nThis is a Model Context Protocol (MCP) server that integrates [AgentQL](https://agentql.com)'s data extraction capabilities.\n\n## Features\n\n### Tools\n\n- `extract-web-data` - extract structured data from a given 'url', using 'prompt' as a description of actual data and its fields to extract.\n\n## Installation\n\nTo use AgentQL MCP Server to extract data from web pages, you need to install it via npm, get an API key from our [Dev Portal](https://dev.agentql.com), and configure it in your favorite app that supports MCP.\n\n### Install the package\n\n```bash\nnpm install -g agentql-mcp\n```\n\n### Configure Claude\n\n- Open Claude Desktop **Settings** via `âŒ˜`+`,` (don't confuse with Claude Account Settings)\n- Go to **Developer** sidebar section\n- Click **Edit Config** and open `claude_desktop_config.json` file\n- Add `agentql` server inside `mcpServers` dictionary in the config file\n- Restart the app\n\n```json title=\"claude_desktop_config.json\"\n{\n  \"mcpServers\": {\n    \"agentql\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"agentql-mcp\"],\n      \"env\": {\n        \"AGENTQL_API_KEY\": \"YOUR_API_KEY\"\n      }\n    }\n  }\n}\n```\n\nRead more about MCP configuration in Claude [here](https://modelcontextprotocol.io/quickstart/user).\n\n### Configure VS Code\n\nFor one-click installation, click one of the install buttons below:\n\n[![Install with NPX in VS Code](https://img.shields.io/badge/VS_Code-NPM-0098FF?style=flat-square&logo=visualstudiocode&logoColor=white)](https://insiders.vscode.dev/redirect/mcp/install?name=agentql&config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22agentql-mcp%22%5D%2C%22env%22%3A%7B%22AGENTQL_API_KEY%22%3A%22%24%7Binput%3AapiKey%7D%22%7D%7D&inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apiKey%22%2C%22description%22%3A%22AgentQL+API+Key%22%2C%22password%22%3Atrue%7D%5D) [![Install with NPX in VS Code Insiders](https://img.shields.io/badge/VS_Code_Insiders-NPM-24bfa5?style=flat-square&logo=visualstudiocode&logoColor=white)](https://insiders.vscode.dev/redirect/mcp/install?name=agentql&config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22agentql-mcp%22%5D%2C%22env%22%3A%7B%22AGENTQL_API_KEY%22%3A%22%24%7Binput%3AapiKey%7D%22%7D%7D&inputs=%5B%7B%22type%22%3A%22promptString%22%2C%22id%22%3A%22apiKey%22%2C%22description%22%3A%22AgentQL+API+Key%22%2C%22password%22%3Atrue%7D%5D&quality=insiders)\n\n#### Manual Installation\n\nClick the install buttons at the top of this section for the quickest installation method. For manual installation, follow these steps:\n\nAdd the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing `Ctrl + Shift + P` and typing `Preferences: Open User Settings (JSON)`.\n\n```json\n{\n  \"mcp\": {\n    \"inputs\": [\n      {\n        \"type\": \"promptString\",\n        \"id\": \"apiKey\",\n        \"description\": \"AgentQL API Key\",\n        \"password\": true\n      }\n    ],\n    \"servers\": {\n      \"agentql\": {\n        \"command\": \"npx\",\n        \"args\": [\"-y\", \"agentql-mcp\"],\n        \"env\": {\n          \"AGENTQL_API_KEY\": \"${input:apiKey}\"\n        }\n      }\n    }\n  }\n}\n```\n\nOptionally, you can add it to a file called `.vscode/mcp.json` in your workspace. This will allow you to share the configuration with others.\n\n```json\n{\n  \"inputs\": [\n    {\n      \"type\": \"promptString\",\n      \"id\": \"apiKey\",\n      \"description\": \"AgentQL API Key\",\n      \"password\": true\n    }\n  ],\n  \"servers\": {\n    \"agentql\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"agentql-mcp\"],\n      \"env\": {\n        \"AGENTQL_API_KEY\": \"${input:apiKey}\"\n      }\n    }\n  }\n}\n```\n\n### Configure Cursor\n\n- Open **Cursor Settings**\n- Go to **MCP > MCP Servers**\n- Click **+ Add new MCP Server**\n- Enter the following:\n  - Name: \"agentql\" (or your preferred name)\n  - Type: \"command\"\n  - Command: `env AGENTQL_API_KEY=YOUR_API_KEY npx -y agentql-mcp`\n\nRead more about MCP configuration in Cursor [here](https://docs.cursor.com/context/model-context-protocol).\n\n### Configure Windsurf\n\n- Open **Windsurf: MCP Configuration Panel**\n- Click **Add custom server+**\n- Alternatively you can open `~/.codeium/windsurf/mcp_config.json` directly\n- Add `agentql` server inside `mcpServers` dictionary in the config file\n\n```json title=\"mcp_config.json\"\n{\n  \"mcpServers\": {\n    \"agentql\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"agentql-mcp\"],\n      \"env\": {\n        \"AGENTQL_API_KEY\": \"YOUR_API_KEY\"\n      }\n    }\n  }\n}\n```\n\nRead more about MCP configuration in Windsurf [here](https://docs.codeium.com/windsurf/mcp).\n\n### Validate MCP integration\n\nGive your agent a task that will require extracting data from the web. For example:\n\n```text\nExtract the list of videos from the page https://www.youtube.com/results?search_query=agentql, every video should have a title, an author name, a number of views and a url to the video. Make sure to exclude ads items. Format this as a markdown table.\n```\n\n> [!TIP]\n> In case your agent complains that it can't open urls or load content from the web instead of using AgentQL, try adding \"use tools\" or \"use agentql tool\" hint.\n\n## Development\n\nInstall dependencies:\n\n```bash\nnpm install\n```\n\nBuild the server:\n\n```bash\nnpm run build\n```\n\nFor development with auto-rebuild:\n\n```bash\nnpm run watch\n```\n\nIf you want to try out development version, you can use the following config instead of the default one:\n\n```json\n{\n  \"mcpServers\": {\n    \"agentql\": {\n      \"command\": \"/path/to/agentql-mcp/dist/index.js\",\n      \"env\": {\n        \"AGENTQL_API_KEY\": \"YOUR_API_KEY\"\n      }\n    }\n  }\n}\n```\n\n> [!NOTE]\n> Don't forget to remove the default AgentQL MCP server config to not confuse Claude with two similar servers.\n\n## Debugging\n\nSince MCP servers communicate over stdio, debugging can be challenging. We recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector), which is available as a package script:\n\n```bash\nnpm run inspector\n```\n\nThe Inspector will provide a URL to access debugging tools in your browser.\n",
  "category": null,
  "qualityScore": 86,
  "githubUrl": "https://github.com/tinyfish-io/agentql-mcp",
  "programmingLanguage": "JavaScript",
  "gitHubOrg": "tinyfish-io",
  "gitHubRepo": "agentql-mcp",
  "repositoryPath": null,
  "gh_stars": 96,
  "gh_contributors": 5,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "b15931a48e0b174c347ebd280af443384d729ad0",
  "last_scraped_at": "2025-07-31T20:48:58.478Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}