{
  "name": "influxdb3__",
  "slug": "influxdata__influxdb3_mcp_server",
  "description": "MCP Server for InfluxDB 3",
  "readme": "# InfluxDB MCP Server\n\nModel Context Protocol (MCP) server for InfluxDB 3 integration. Provides tools, resources, and prompts for interacting with InfluxDB v3 (Core/Enterprise/Cloud Dedicated) via MCP clients.\n\n---\n\n## Prerequisites\n\n- **InfluxDB 3 Instance**: URL and token (Core/Enterprise) or Cluster ID and tokens (Cloud Dedicated)\n- **Node.js**: v18 or newer (for npm/npx usage)\n- **npm**: v9 or newer (for npm/npx usage)\n- **Docker**: (for Docker-based setup)\n\n---\n\n## Available Tools\n\n| Tool Name                     | Description                                                    | Availability         |\n| ----------------------------- | -------------------------------------------------------------- | -------------------- |\n| `get_help`                    | Get help and troubleshooting guidance for InfluxDB operations  | All versions         |\n| `write_line_protocol`         | Write data using InfluxDB line protocol                        | All versions         |\n| `create_database`             | Create a new database (with Cloud Dedicated config options)    | All versions         |\n| `update_database`             | Update database configuration (maxTables, retention, etc.)     | Cloud Dedicated only |\n| `delete_database`             | Delete a database by name (irreversible)                       | All versions         |\n| `execute_query`               | Run a SQL query against a database (supports multiple formats) | All versions         |\n| `get_measurements`            | List all measurements (tables) in a database                   | All versions         |\n| `get_measurement_schema`      | Get schema (columns/types) for a measurement/table             | All versions         |\n| `create_admin_token`          | Create a new admin token (full permissions)                    | Core/Enterprise only |\n| `list_admin_tokens`           | List all admin tokens (with optional filtering)                | Core/Enterprise only |\n| `create_resource_token`       | Create a resource token for specific DBs and permissions       | Core/Enterprise only |\n| `list_resource_tokens`        | List all resource tokens (with filtering and ordering)         | Core/Enterprise only |\n| `delete_token`                | Delete a token by name                                         | Core/Enterprise only |\n| `regenerate_operator_token`   | Regenerate the operator token (dangerous/irreversible)         | Core/Enterprise only |\n| `cloud_list_database_tokens`  | List all database tokens for Cloud-Dedicated cluster           | Cloud Dedicated only |\n| `cloud_get_database_token`    | Get details of a specific database token by ID                 | Cloud Dedicated only |\n| `cloud_create_database_token` | Create a new database token for Cloud-Dedicated cluster        | Cloud Dedicated only |\n| `cloud_update_database_token` | Update an existing database token                              | Cloud Dedicated only |\n| `cloud_delete_database_token` | Delete a database token from Cloud-Dedicated cluster           | Cloud Dedicated only |\n| `list_databases`              | List all available databases in the instance                   | All versions         |\n| `health_check`                | Check InfluxDB connection and health status                    | All versions         |\n\n---\n\n## Available Resources\n\n| Resource Name      | Description                                |\n| ------------------ | ------------------------------------------ |\n| `influx-config`    | Read-only access to InfluxDB configuration |\n| `influx-status`    | Real-time connection and health status     |\n| `influx-databases` | List of all databases in the instance      |\n\n---\n\n## Setup & Integration Guide\n\n### 1. Environment Variables\n\n#### For Core/Enterprise InfluxDB:\n\nYou must provide:\n\n- `INFLUX_DB_INSTANCE_URL` (e.g. `http://localhost:8181/`)\n- `INFLUX_DB_TOKEN`\n- `INFLUX_DB_PRODUCT_TYPE` (`core` or `enterprise`)\n\nExample `.env`:\n\n```env\nINFLUX_DB_INSTANCE_URL=http://localhost:8181/\nINFLUX_DB_TOKEN=your_influxdb_token_here\nINFLUX_DB_PRODUCT_TYPE=core\n```\n\n#### For Cloud Dedicated InfluxDB:\n\nYou must provide `INFLUX_DB_PRODUCT_TYPE=cloud-dedicated` and `INFLUX_DB_CLUSTER_ID`, plus one of these token combinations:\n\n**Option 1: Database Token Only** (Query/Write operations only):\n\n```env\nINFLUX_DB_PRODUCT_TYPE=cloud-dedicated\nINFLUX_DB_CLUSTER_ID=your_cluster_id_here\nINFLUX_DB_TOKEN=your_database_token_here\n```\n\n**Option 2: Management Token Only** (Database management only):\n\n```env\nINFLUX_DB_PRODUCT_TYPE=cloud-dedicated\nINFLUX_DB_CLUSTER_ID=your_cluster_id_here\nINFLUX_DB_ACCOUNT_ID=your_account_id_here\nINFLUX_DB_MANAGEMENT_TOKEN=your_management_token_here\n```\n\n**Option 3: Both Tokens** (Full functionality):\n\n```env\nINFLUX_DB_PRODUCT_TYPE=cloud-dedicated\nINFLUX_DB_CLUSTER_ID=your_cluster_id_here\nINFLUX_DB_ACCOUNT_ID=your_account_id_here\nINFLUX_DB_TOKEN=your_database_token_here\nINFLUX_DB_MANAGEMENT_TOKEN=your_management_token_here\n```\n\nSee `env.cloud-dedicated.example` for detailed configuration options and comments.\n\n---\n\n### 2. Integration with MCP Clients\n\n#### A. Local (npm install & run)\n\n1. **Install dependencies:**\n   ```bash\n   npm install\n   ```\n2. **Build the server:**\n   ```bash\n   npm run build\n   ```\n3. **Configure your MCP client** to use the built server. Example (see `example-local.mcp.json`):\n   ```json\n   {\n     \"mcpServers\": {\n       \"influxdb\": {\n         \"command\": \"node\",\n         \"args\": [\"/path/to/influx-mcp-standalone/build/index.js\"],\n         \"env\": {\n           \"INFLUX_DB_INSTANCE_URL\": \"http://localhost:8181/\",\n           \"INFLUX_DB_TOKEN\": \"<YOUR_INFLUXDB_TOKEN>\",\n           \"INFLUX_DB_PRODUCT_TYPE\": \"core\"\n         }\n       }\n     }\n   }\n   ```\n\n#### B. Local (npx, no install/build required)\n\n1. **Run directly with npx** (after publishing to npm, won't work yet):\n   ```json\n   {\n     \"mcpServers\": {\n       \"influxdb\": {\n         \"command\": \"npx\",\n         \"args\": [\"-y\", \"@modelcontextprotocol/server-influxdb\"],\n         \"env\": {\n           \"INFLUX_DB_INSTANCE_URL\": \"http://localhost:8181/\",\n           \"INFLUX_DB_TOKEN\": \"<YOUR_INFLUXDB_TOKEN>\",\n           \"INFLUX_DB_PRODUCT_TYPE\": \"core\"\n         }\n       }\n     }\n   }\n   ```\n\n#### C. Docker\n\nBefore running the Docker integration, you must build the Docker image:\n\n```bash\n# Option 1: Use docker compose (recommended)\ndocker compose build\n# Option 2: Use npm script\nnpm run docker:build\n```\n\n**a) Docker with remote InfluxDB instance** (see `example-docker.mcp.json`):\n\n```json\n{\n  \"mcpServers\": {\n    \"influxdb\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"-e\",\n        \"INFLUX_DB_INSTANCE_URL\",\n        \"-e\",\n        \"INFLUX_DB_TOKEN\",\n        \"-e\",\n        \"INFLUX_DB_PRODUCT_TYPE\",\n        \"mcp/influxdb\"\n      ],\n      \"env\": {\n        \"INFLUX_DB_INSTANCE_URL\": \"http://remote-influxdb-host:8181/\",\n        \"INFLUX_DB_TOKEN\": \"<YOUR_INFLUXDB_TOKEN>\",\n        \"INFLUX_DB_PRODUCT_TYPE\": \"core\"\n      }\n    }\n  }\n}\n```\n\n**b) Docker with InfluxDB running in Docker on the same machine** (see `example-docker.mcp.json`):\n\nUse `host.docker.internal` as the InfluxDB URL so the MCP server container can reach the InfluxDB container:\n\n```json\n{\n  \"mcpServers\": {\n    \"influxdb\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"--add-host=host.docker.internal:host-gateway\",\n        \"-e\",\n        \"INFLUX_DB_INSTANCE_URL\",\n        \"-e\",\n        \"INFLUX_DB_TOKEN\",\n        \"-e\",\n        \"INFLUX_DB_PRODUCT_TYPE\",\n        \"influxdb-mcp-server\"\n      ],\n      \"env\": {\n        \"INFLUX_DB_INSTANCE_URL\": \"http://host.docker.internal:8181/\",\n        \"INFLUX_DB_TOKEN\": \"<YOUR_INFLUXDB_TOKEN>\",\n        \"INFLUX_DB_PRODUCT_TYPE\": \"enterprise\"\n      }\n    }\n  }\n}\n```\n\n---\n\n## Example Usage\n\n- Use your MCP client to call tools, resources, or prompts as described above.\n- See the `example-*.mcp.json` files for ready-to-use configuration templates:\n  - `example-local.mcp.json` - Local development setup\n  - `example-npx.mcp.json` - NPX-based setup\n  - `example-docker.mcp.json` - Docker-based setup\n  - `example-cloud-dedicated.mcp.json` - Cloud Dedicated with all variables\n- See the `env.example` and `env.cloud-dedicated.example` files for environment variable templates.\n\n---\n\n## Support & Troubleshooting\n\n- Use the `get_help` tool for built-in help and troubleshooting.\n- For connection issues, check your environment variables and InfluxDB instance status.\n- For advanced configuration, see the comments in the example `.env` and MCP config files.\n\n---\n\n## License\n\n[MIT](LICENSE)\n",
  "category": null,
  "qualityScore": 77,
  "githubUrl": "https://github.com/influxdata/influxdb3_mcp_server",
  "programmingLanguage": "TypeScript",
  "gitHubOrg": "influxdata",
  "gitHubRepo": "influxdb3_mcp_server",
  "repositoryPath": null,
  "gh_stars": 10,
  "gh_contributors": 5,
  "gh_issues": 2,
  "gh_releases": false,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "3fb86fe505f76fddcab4c7740ad62987beb02c45",
  "last_scraped_at": "2025-07-29T19:12:42.992Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}