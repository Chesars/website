{
  "name": "MaxMSP",
  "slug": "tiianhk__maxmsp-mcp-server",
  "description": "MCP (Model Context Protocol) Server for Max (Max/MSP/Jitter)",
  "readme": "# MaxMSP-MCP Server\n\nThis project uses the [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP) to let LLMs directly understand and generate Max patches.\n\n### Understand: LLM Explaining a Max Patch\n\n![img](./assets/understand.gif)\n[Video link](https://www.youtube.com/watch?v=YKXqS66zrec). Acknowledgement: the patch being explained is downloaded from [here](https://github.com/jeffThompson/MaxMSP_TeachingSketches/blob/master/02_MSP/07%20Ring%20Modulation.maxpat). Text comments in the original file are deleted.\n\n### Generate: LLM Making an FM Synth\n\n![img](./assets/generate.gif)\nCheck out the [full video](https://www.youtube.com/watch?v=Ns89YuE5-to) where you can listen to the synthesised sounds.\n\nThe LLM agent has access to the official documentation of each object, as well as objects in the current patch and subpatch windows, which helps in retrieving and explaining objects, debugging, and verifying their own actions.\n\n## Installation  \n\n### Prerequisites  \n\n - Python 3.8 or newer  \n - [uv package manager](https://github.com/astral-sh/uv)  \n - Max 9 or newer (because some of the scripts require the Javascript V8 engine), we have not tested it on Max 8 or earlier versions of Max yet.  \n\n### Installing the MCP server\n\n1. Install uv:\n```\n# On macOS and Linux:\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n# On Windows:\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n```\n2. Clone this repository and open its directory:\n```\ngit clone https://github.com/tiianhk/MaxMSP-MCP-Server.git\ncd MaxMSP-MCP-Server\n```\n3. Start a new environment and install python dependencies:\n```\nuv venv\nuv pip install -r requirements.txt\n```\n4. Connect the MCP server to a MCP client (which hosts LLMs):\n```\n# Claude:\npython install.py --client claude\n# or Cursor:\npython install.py --client cursor\n```\nTo use other clients (check the [list](https://modelcontextprotocol.io/clients)), you need to download, mannually add the configuration file path to [here](https://github.com/tiianhk/MaxMSP-MCP-Server/blob/main/install.py#L6-L13), and connect by running `python install.py --client {your_client_name}`.\n\n### Installing to a Max patch  \n\nUse or copy from `MaxMSP_Agent/demo.maxpat`. In the first tab, click the `script npm version` message to verify that [npm](https://github.com/npm/cli) is installed. Then click `script npm install` to install the required dependencies. Switch to the second tab to access the agent. Click `script start` to initiate communication with Python. Once connected, you can interact with the LLM interface to have it explain, modify, or create Max objects within the patch.\n\n## Disclaimer\n\nThis is a third party implementation and not made by Cycling '74.\n",
  "category": null,
  "qualityScore": 79,
  "githubUrl": "https://github.com/tiianhk/MaxMSP-MCP-Server",
  "programmingLanguage": "Max",
  "gitHubOrg": "tiianhk",
  "gitHubRepo": "MaxMSP-MCP-Server",
  "repositoryPath": null,
  "gh_stars": 65,
  "gh_contributors": 2,
  "gh_issues": 2,
  "gh_releases": false,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "e95592f58f1a7a0181e135d3b4a5d4bbeca53485",
  "last_scraped_at": "2025-07-29T19:08:59.480Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}