{
  "name": "edgedelta",
  "slug": "edgedelta__edgedelta-mcp-server",
  "description": "Edge Delta MCP Server",
  "readme": "# Edge Delta MCP Server\n\nThe **Edge Delta MCP Server** is a [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction)\nserver that provides seamless integration with Edge Delta APIs, enabling advanced\nautomation and interaction capabilities for developers and tools.\n\n## Use Cases\n\n- Extract and analyse observability data from Edge Delta.\n- Build AI‑powered tools and applications that interact with Edge Delta’s platform.\n\n## Prerequisites\n\n1. **Docker Engine ≥ 20.10** installed *and running*.\n2. **Docker Buildx plug‑in** available:\n   - **macOS / Windows** – included with Docker Desktop.\n   - **Debian / Ubuntu**\n     ```bash\n     sudo apt-get update && sudo apt-get install -y docker-buildx-plugin\n     ```\n   - **Fedora / RHEL / CentOS**\n     ```bash\n     sudo dnf install -y docker-buildx-plugin   # or yum install …\n     ```\n   - **Other distros (manual fallback)**\n     ```bash\n     mkdir -p ~/.docker/cli-plugins\n     curl -sSL \\\n       https://github.com/docker/buildx/releases/latest/download/buildx-$(uname -s | tr '[:upper:]' '[:lower:]')-amd64 \\\n       -o ~/.docker/cli-plugins/docker-buildx\n     chmod +x ~/.docker/cli-plugins/docker-buildx\n     ```\n3. An **Edge Delta API token** with the required scope – [create one here](https://docs.edgedelta.com/api-tokens/).\n4. Your **Edge Delta organisation ID** – [find it here](https://docs.edgedelta.com/my-organization/).\n\n## Build (container image)\n\nFirst‑time setup (creates a multi‑platform builder and boots it):\n\n```bash\ndocker buildx create --name edgedelta-builder --use\ndocker buildx inspect --bootstrap\n```\n\nBuild the image and load it into the local Docker daemon:\n\n```bash\ndocker buildx build --load -t mcp/edgedelta .\n```\n\n> ℹ️  The `--load` flag streams the image back to your local Docker engine so you can\n> run it directly with `docker run mcp/edgedelta …`.\n\n## Installation\n\n### Usage with Cursor\n\n```json\n{\n  \"mcpServers\": {\n    \"edgedelta\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e ED_ORG_ID\",\n        \"-e ED_API_TOKEN\",\n        \"ghcr.io/edgedelta/edgedelta-mcp-server:latest\"\n      ],\n      \"env\": {\n        \"ED_API_TOKEN\": \"<YOUR_TOKEN>\",\n        \"ED_ORG_ID\": \"<YOUR_ORG_ID>\"\n      }\n    }\n  }\n}\n```\n\n## Library Usage\n\nThe exported Go API of this module is **experimental** and may change without notice.\nIf you rely on it in production, please open an issue describing your use case so we\ncan stabilise the relevant surface.\n\n## License\n\nLicensed under the terms of the **MIT** licence. See [LICENSE](./LICENSE) for full details.\n\n",
  "category": null,
  "qualityScore": 77,
  "githubUrl": "https://github.com/edgedelta/edgedelta-mcp-server",
  "programmingLanguage": "Go",
  "gitHubOrg": "edgedelta",
  "gitHubRepo": "edgedelta-mcp-server",
  "repositoryPath": null,
  "gh_stars": 4,
  "gh_contributors": 6,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "b1c4451640a3f63964544b2c614cc1701c4f133e",
  "last_scraped_at": "2025-07-31T20:48:53.891Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}