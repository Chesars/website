{
  "name": "ws",
  "slug": "nick1udwig__ws-mcp",
  "description": "MCP server from nick1udwig/ws-mcp",
  "readme": "# ws-mcp\n\nWrap MCP stdio servers with a WebSocket.\nFor use with [kibitz](https://github.com/nick1udwig/kibitz).\n\n## Quickstart\n\n### Prerequisites\n\nInstall [uv](https://github.com/astral-sh/uv):\n```bash\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\n### Configuration\n\nThe config file specifies which MCP servers to run.\nThe default config (no `--config` or `--command` args provided) includes:\n- [`wcgw`](https://github.com/rusiaaman/wcgw): For general system operations and file management\n- [`fetch`](https://github.com/modelcontextprotocol/servers/tree/main/src/fetch): For making HTTP requests\n\nTo make a configuration file:\n\n1. Create your configuration file:\n   ```bash\n   cp sample.config.json config.json\n   ```\n2. Modify `config.json` to add or remove servers based on your needs.\n3. Run with `--config path/to/config.json` to use the new config file.\n\n### Running ws-mcp\n\nBasic usage with default config file (no `--config` or `--command` provided) and port:\n```bash\nuvx --refresh ws-mcp@latest\n```\n\nThis will start all configured servers on the default port (`10125`).\n\nTo use a config file and port:\n```bash\nuvx --refresh ws-mcp@latest --config path/to/config --port 10125\n```\n\n## Detailed Usage\n\n```bash\n# Example using fetch\nuvx --refresh ws-mcp --command \"uvx mcp-server-fetch\" --port 3002\n\n# Example using wcgw\n## On macOS\nuvx --refresh ws-mcp --command \"uvx --from wcgw@latest --python 3.12 wcgw_mcp\" --port 3001\n\n## On Linux (or if you have issues on macOS with wcgw)\ncd /tmp\ngit clone https://github.com/nick1udwig/wcgw.git\ncd wcgw\ngit submodule update --init --recursive\ngit checkout hf/fix-wcgw-on-ubuntu\ncd ..\nuvx --refresh ws-mcp --command \"uvx --from /tmp/wcgw --with /tmp/wcgw/src/mcp_wcgw --python 3.12 wcgw_mcp\" --port 3001\n\n# Example using Brave search\nexport BRAVE_API_KEY=YOUR_API_KEY_HERE\nuvx --refresh ws-mcp --env BRAVE_API_KEY=$BRAVE_API_KEY --command \"npx -y @modelcontextprotocol/server-brave-search\" --port 3003\n\n# Or, with a .env file:\nuvx --refresh ws-mcp --env-file path/to/.env --command \"npx -y @modelcontextprotocol/server-brave-search\" --port 3003\n\n# `--command` can be supplied multiple times!\n#  Example serving multiple servers at once:\nuvx --refresh ws-mcp --env-file path/to/.env --command \"npx -y @modelcontextprotocol/server-brave-search\" --command \"uvx mcp-server-fetch\" --port 3004\n\n# Servers can also be specified in a `.json` file following [the standard MCP format](https://modelcontextprotocol.io/quickstart/user#2-add-the-filesystem-mcp-server)\nuvx --refresh ws-mcp --env-file path/to/.env --config path/to/config.json --port 3005\n```\n",
  "category": null,
  "qualityScore": 72,
  "githubUrl": "https://github.com/nick1udwig/ws-mcp",
  "programmingLanguage": "Python",
  "gitHubOrg": "nick1udwig",
  "gitHubRepo": "ws-mcp",
  "repositoryPath": null,
  "gh_stars": 19,
  "gh_contributors": 2,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "15b5414db935b673d9f86a9b68a4c829c7d7d6c4",
  "last_scraped_at": "2025-08-01T15:33:29.000Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}