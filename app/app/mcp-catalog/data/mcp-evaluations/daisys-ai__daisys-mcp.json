{
  "name": "daisys",
  "slug": "daisys-ai__daisys-mcp",
  "description": "The Daisys mcp server",
  "readme": "# Daisys MCP server\n[![smithery badge](https://smithery.ai/badge/@daisys-ai/daisys-mcp)](https://smithery.ai/server/@daisys-ai/daisys-mcp)\n\nDaisys-mcp is a beta version and doesn't have a stable release yet. But you can try it out by doing the following:\n\n1. Get an account on [Daisys](https://www.daisys.ai/) and create an username and password.\n\n\nIf you run on mac os run the following command:\n```bash\nbrew install portaudio\n```\n\nIf you run on linux run the following command:\n```bash\nsudo apt install portaudio19-dev libjack-dev\n```\n\n2. Add the following configuration to the mcp config file in your MCP client ([Claude Desktop](https://claude.ai/download), [Cursor](https://www.cursor.com/), [mcp-cli](https://github.com/chrishayuk/mcp-cli), [mcp-vscode](https://code.visualstudio.com/docs/copilot/chat/mcp-servers), etc.):\n```json\n{\n  \"mcpServers\": {\n    \"daisys-mcp\": {\n      \"command\": \"uvx\",\n      \"args\": [\"daisys-mcp\"],\n      \"env\": {\n        \"DAISYS_EMAIL\": \"{Your Daisys Email}\",\n        \"DAISYS_PASSWORD\": \"{Your Daisys Password}\",\n        \"DAISYS_BASE_STORAGE_PATH\": \"{Path where you want to store your audio files}\"\n      }\n    }\n  }\n}\n```\n\n## To build from source:\n\n1. clone the repository: `git clone https://github.com/daisys-ai/daisys-mcp.git`\n\n2. cd into the repository: `cd daisys-mcp`\n\n3. Install `uv` (Python package manager), install with `curl -LsSf https://astral.sh/uv/install.sh | sh` or see the `uv` [repo](https://github.com/astral-sh/uv) for additional install methods.\n\n4. Create a virtual environment and install dependencies [using uv](https://github.com/astral-sh/uv):\n\n```bash\nuv venv\n# source .venv/Scripts/activate (Windows)\nsource .venv/bin/activate (mac and linux)\nuv pip install -e .\n```\n\n5. Add the following to your config file in your MCP client ([Claude Desktop](https://claude.ai/download), [Cursor](https://www.cursor.com/), [mcp-cli](https://github.com/chrishayuk/mcp-cli), [mcp-vscode](https://code.visualstudio.com/docs/copilot/chat/mcp-servers), etc.):\n```json\n{\n    \"mcpServers\": {\n        \"daisys-mcp\": {\n            \"command\": \"uv\",\n            \"args\": [\n                \"--directory\",\n                \"{installation_path}/daisys-mcp\",\n                \"run\",\n                \"-m\",\n                \"daisys_mcp.server\"\n            ],\n            \"env\": {\n                \"DAISYS_EMAIL\": \"{Your Daisys Email}\",\n                \"DAISYS_PASSWORD\": \"{Your Daisys Password}\",\n                \"DAISYS_BASE_STORAGE_PATH\": \"{Path where you want to store your audio files}\"\n            }\n        }\n    }\n}\n```\n\n## Common Issues\n\nIf you get any issues with portaudio on linux, you can try installing it manually:\n```bash\nsudo apt-get update\nsudo apt-get install -y portaudio19-dev\n```\n\n## Contributing\n\nIf you want to contribute or run from source:\n\n1. Clone the repository:\n\n```bash\ngit clone https://github.com/daisys-ai/daisys-mcp.git\ncd daisys_mcp\n```\n\n2. Create a virtual environment and install dependencies [using uv](https://github.com/astral-sh/uv):\n\n```bash\nuv venv\nsource .venv/bin/activate\nuv pip install -e .\nuv pip install -e \".[dev]\"\n```\n\n3. Copy `.env.example` to `.env` and add your DAISYS username and password:\n\n```bash\ncp .env.example .env\n# Edit .env and add your DAISYS username and password\n```\n\n4. Test the server by running the tests:\n\n```bash\nuv run pytest\n```\n\nyou can also run a full integration test with:\n\n```bash\nuv run pytest -m 'requires_credentials' # ⚠️ Running full integration tests does costs tokens on the Daisys platform \n```\n\n5. Debug and test locally with MCP Inspector: `uv run mcp dev daisys_mcp/server.py`\n",
  "category": null,
  "qualityScore": 80,
  "githubUrl": "https://github.com/daisys-ai/daisys-mcp",
  "programmingLanguage": "Python",
  "gitHubOrg": "daisys-ai",
  "gitHubRepo": "daisys-mcp",
  "repositoryPath": null,
  "gh_stars": 8,
  "gh_contributors": 2,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "34509fef8d7ab96107c58486840eb734c429783d",
  "last_scraped_at": "2025-07-31T20:49:01.282Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}