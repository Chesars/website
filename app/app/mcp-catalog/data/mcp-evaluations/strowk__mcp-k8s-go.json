{
  "name": "k8s go",
  "slug": "strowk__mcp-k8s-go",
  "description": "MCP server connecting to Kubernetes",
  "readme": "<h4 align=\"center\">Golang-based MCP server connecting to Kubernetes</h4>\r\n\r\n<h1 align=\"center\">\r\n   <img src=\"docs/images/logo.png\" width=\"180\"/>\r\n   <br/>\r\n   MCP K8S Go\r\n</h1>\r\n\r\n<p align=\"center\">\r\n  <a href=\"#features\">Features</a> ‚öô\r\n  <a href=\"#browse-with-inspector\">Browse With Inspector</a> ‚öô\r\n  <a href=\"#use-with-claude\">Use With Claude</a> ‚öô\r\n  <a href=\"https://github.com/strowk/mcp-k8s-go/blob/main/CONTRIBUTING.md\">Contributing ‚Üó</a> ‚öô\r\n  <a href=\"https://modelcontextprotocol.io\">About MCP ‚Üó</a>\r\n</p>\r\n\r\n<p align=\"center\">\r\n    <a href=\"https://github.com/strowk/mcp-k8s-go/actions/workflows/dependabot/dependabot-updates\"><img src=\"https://github.com/strowk/mcp-k8s-go/actions/workflows/dependabot/dependabot-updates/badge.svg\"></a>\r\n    <a href=\"https://github.com/strowk/mcp-k8s-go/actions/workflows/test.yaml\"><img src=\"https://github.com/strowk/mcp-k8s-go/actions/workflows/test.yaml/badge.svg\"></a>\r\n\t  <a href=\"https://github.com/strowk/mcp-k8s-go/actions/workflows/golangci-lint.yaml\"><img src=\"https://github.com/strowk/mcp-k8s-go/actions/workflows/golangci-lint.yaml/badge.svg\"/></a>\r\n    <br/>\r\n    <a href=\"https://github.com/strowk/mcp-k8s-go/releases/latest\"><img src=\"https://img.shields.io/github/v/release/strowk/mcp-k8s-go?logo=github&color=22ff22\" alt=\"latest release badge\"></a>\r\n    <a href=\"https://goreportcard.com/report/github.com/strowk/mcp-k8s-go\"><img src=\"https://goreportcard.com/badge/github.com/strowk/mcp-k8s-go\" alt=\"Go Reference\"></a>\r\n    <a href=\"https://github.com/strowk/mcp-k8s-go/blob/main/LICENSE\"><img src=\"https://img.shields.io/github/license/strowk/mcp-k8s-go\" alt=\"license badge\"></a>\r\n</p>\r\n\r\n## Features\r\n\r\nMCP üí¨ prompt üóÇÔ∏è resource ü§ñ tool \r\n\r\n- üóÇÔ∏èü§ñ List Kubernetes contexts\r\n- üí¨ü§ñ List Kubernetes namespaces\r\n- ü§ñ List, get, create and modify any Kubernetes resources\r\n  - includes custom mappings for resources like pods, services, deployments\r\n- ü§ñ List Kubernetes nodes\r\n- üí¨ List Kubernetes pods\r\n- ü§ñ Get Kubernetes events\r\n- ü§ñ Get Kubernetes pod logs\r\n- ü§ñ Run command in Kubernetes pod\r\n\r\n## Browse With Inspector\r\n\r\nTo use latest published version with Inspector you can run this:\r\n\r\n```bash\r\nnpx @modelcontextprotocol/inspector npx @strowk/mcp-k8s\r\n```\r\n\r\n## Use With Claude\r\n\r\n<details><summary><b>\r\nDemo Usage\r\n</b></summary>\r\n\r\nFollowing chat with Claude Desktop demonstrates how it looks when selected particular context as a resource and then asked to check pod logs for errors in kube-system namespace:\r\n\r\n![Claude Desktop](docs/images/claude-desktop-logs.png)\r\n\r\n</details>\r\n\r\nTo use this MCP server with Claude Desktop (or any other client) you might need to choose which way of installation to use.\r\n\r\nYou have multiple options:\r\n\r\n|              | <a href=\"#using-smithery\">Smithery</a> | <a href=\"#using-mcp-get\">mcp-get</a> | <a href=\"#prebuilt-from-npm\">Pre-built NPM</a> | <a href=\"#from-github-releases\">Pre-built in Github</a> | <a href=\"#building-from-source\">From sources</a> | <a href=\"#using-docker\">Using Docker</a> |\r\n| ------------ | -------------------------------------- | ------------------------------------ | ---------------------------------------------- | ------------------------------------------------------- | ------------------------------------------------ | ---------------------------------------- |\r\n| Claude Setup | Auto                                   | Auto                                 | Manual                                         | Manual                                                  | Manual                                           | Manual                                   |\r\n| Prerequisite | Node.js                                | Node.js                              | Node.js                                        | None                                                    | Golang                                           | Docker                                   |\r\n\r\n### Using Smithery\r\n\r\nTo install MCP K8S Go for Claude Desktop automatically via [Smithery](https://smithery.ai/server/@strowk/mcp-k8s):\r\n\r\n```bash\r\nnpx -y @smithery/cli install @strowk/mcp-k8s --client claude\r\n```\r\n\r\n### Using mcp-get\r\n\r\nTo install MCP K8S Go for Claude Desktop automatically via [mcp-get](https://mcp-get.com/packages/%40strowk%2Fmcp-k8s):\r\n\r\n```bash\r\nnpx @michaellatman/mcp-get@latest install @strowk/mcp-k8s\r\n```\r\n\r\n### Manually with prebuilt binaries\r\n\r\n#### Prebuilt from npm\r\n\r\nUse this if you have npm installed and want to use pre-built binaries:\r\n\r\n```bash\r\nnpm install -g @strowk/mcp-k8s\r\n```\r\n\r\nThen check version by running `mcp-k8s --version` and if this printed installed version, you can proceed to add configuration to `claude_desktop_config.json` file:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"mcp_k8s\": {\r\n      \"command\": \"mcp-k8s\",\r\n      \"args\": []\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n, or using `npx` with any client:\r\n\r\n```bash\r\nnpx @strowk/mcp-k8s\r\n```\r\n\r\nFor example for Claude:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"mcp_k8s\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"@strowk/mcp-k8s\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### From GitHub releases\r\n\r\nHead to [GitHub releases](https://github.com/strowk/mcp-k8s-go/releases) and download the latest release for your platform.\r\n\r\nUnpack the archive, which would contain binary named `mcp-k8s-go`, put that binary somewhere in your PATH and then add the following configuration to the `claude_desktop_config.json` file:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"mcp_k8s\": {\r\n      \"command\": \"mcp-k8s-go\",\r\n      \"args\": []\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Building from source\r\n\r\nYou would need Golang installed to build this project:\r\n\r\n```bash\r\ngo get github.com/strowk/mcp-k8s-go\r\ngo install github.com/strowk/mcp-k8s-go\r\n```\r\n\r\n, and then add the following configuration to the `claude_desktop_config.json` file:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"mcp_k8s_go\": {\r\n      \"command\": \"mcp-k8s-go\",\r\n      \"args\": []\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Using Docker\r\n\r\nThis server is built and published to Docker Hub since 0.3.1-beta.2 release with multi-arch images available for linux/amd64 and linux/arm64 architectures.\r\n\r\nYou can use latest tag f.e like this:\r\n\r\n```bash\r\ndocker run -i -v ~/.kube/config:/home/nonroot/.kube/config --rm mcpk8s/server:latest\r\n```\r\n\r\nWindows users might need to replace `~/.kube/config` with `//c/Users/<username>/.kube/config` at least in Git Bash.\r\n\r\nFor Claude:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"mcp_k8s_go\": {\r\n      \"command\": \"docker\",\r\n      \"args\": [\r\n        \"run\",\r\n        \"-i\",\r\n        \"-v\",\r\n        \"~/.kube/config:/home/nonroot/.kube/config\",\r\n        \"--rm\",\r\n        \"mcpk8s/server:latest\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Environment Variables and Command-line Options\r\n\r\nThe following environment variables are used by the MCP server:\r\n\r\n- `KUBECONFIG`: Path to your Kubernetes configuration file (optional, defaults to ~/.kube/config)\r\n\r\nThe following command-line options are supported:\r\n\r\n- `--allowed-contexts=<ctx1,ctx2,...>`: Comma-separated list of allowed Kubernetes contexts that users can access. If not specified, all contexts are allowed.\r\n- `--readonly`: Disables any tool which can write changes to the cluster\r\n- `--help`: Display help information\r\n- `--version`: Display version information\r\n\r\nFor example if you are configuring Claude Desktop, you can add the following configuration to `claude_desktop_config.json` file:\r\n\r\n```json\r\n{\r\n    \"mcpServers\": {\r\n        \"mcp_k8s\": {\r\n            \"command\": \"mcp-k8s\",\r\n            \"args\": [\r\n                \"--allowed-contexts=dev,prod\",\r\n                \"--readonly\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n, which would allow only `dev` and `prod` contexts to be used and would disable any tool which can write changes to the cluster.\r\n\r\n",
  "category": null,
  "qualityScore": 88,
  "githubUrl": "https://github.com/strowk/mcp-k8s-go",
  "programmingLanguage": "Go",
  "gitHubOrg": "strowk",
  "gitHubRepo": "mcp-k8s-go",
  "repositoryPath": null,
  "gh_stars": 330,
  "gh_contributors": 10,
  "gh_issues": 0,
  "gh_releases": true,
  "gh_ci_cd": true,
  "gh_latest_commit_hash": "2be86219157598f771b0db702dd09d97fb680a38",
  "last_scraped_at": "2025-08-01T13:16:28.183Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null
}