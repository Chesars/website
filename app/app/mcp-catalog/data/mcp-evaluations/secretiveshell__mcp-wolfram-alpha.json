{
  "name": "wolfram alpha",
  "slug": "secretiveshell__mcp-wolfram-alpha",
  "description": "Connect your chat repl to wolfram alpha computational intelligence",
  "category": null,
  "qualityScore": 66,
  "githubUrl": "https://github.com/SecretiveShell/MCP-wolfram-alpha",
  "programmingLanguage": "Python",
  "gitHubOrg": "SecretiveShell",
  "gitHubRepo": "MCP-wolfram-alpha",
  "repositoryPath": null,
  "gh_stars": 53,
  "gh_contributors": 3,
  "gh_issues": 3,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "a92556e5a3543dbf93948ee415e5129ecdf617c6",
  "last_scraped_at": "2025-08-01T15:33:26.030Z",
  "implementing_tools": null,
  "implementing_prompts": null,
  "implementing_resources": null,
  "implementing_sampling": null,
  "implementing_roots": null,
  "implementing_logging": null,
  "implementing_stdio": null,
  "implementing_streamable_http": null,
  "implementing_oauth2": null,
  "readme": "# MCP-wolfram-alpha\r\n\r\nA MCP server to connect to wolfram alpha API.\r\n\r\n<a href=\"https://glama.ai/mcp/servers/q5fud9cttp\">\r\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/q5fud9cttp/badge\" />\r\n</a>\r\n\r\n## Components\r\n\r\n### Prompts\r\n\r\nThis is analogous to the `!wa` bang in duckduckgo search.\r\n\r\n```python\r\ndef wa(query: str) -> f\"Use wolfram alpha to answer the following question: {query}\"\r\n```\r\n\r\n### Tools\r\n\r\nQuery Wolfram Alpha api.\r\n\r\n```python\r\ndef query_wolfram_alpha(query: str) -> str\r\n```\r\n\r\n## Configuration\r\n\r\nYou **must** set the `WOLFRAM_API_KEY` environment variable. Get an api ket from [Wolfram Alpha](https://products.wolframalpha.com/api).\r\n\r\nThis was tested with the full results API, but it might not be required.\r\n\r\n```json\r\n{\r\n    \"mcpServers\": {\r\n        \"MCP-wolfram-alpha\": {\r\n            \"command\": \"uv\",\r\n            \"args\": [\r\n                \"--directory\",\r\n                \"C:\\\\Users\\\\root\\\\Documents\\\\MCP-wolfram-alpha\",\r\n                \"run\",\r\n                \"MCP-wolfram-alpha\"\r\n            ],\r\n            \"env\": {\r\n                \"WOLFRAM_API_KEY\": \"your-app-id\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Development\r\n\r\n### Debugging\r\n\r\nSince the official MCP inspector does not have good environment support, I reccommend using wong2's [mcp-cli-inspector](https://github.com/wong2/mcp-cli).\r\n\r\nCreate a config.json file in the same style as claude desktop.\r\n\r\n```json\r\n{\r\n    \"mcpServers\": {\r\n        \"MCP-wolfram-alpha\": {\r\n            \"command\": \"uv\",\r\n            \"args\": [\r\n                \"--directory\",\r\n                \"/full/path/to/MCP-wolfram-alpha\",\r\n                \"run\",\r\n                \"MCP-wolfram-alpha\"\r\n            ],\r\n            \"env\": {\r\n                \"WOLFRAM_API_KEY\": \"your-app-id\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThen run:\r\n\r\n```bash\r\nnpx @wong2/mcp-cli -c .\\config.json\r\n```\r\n"
}