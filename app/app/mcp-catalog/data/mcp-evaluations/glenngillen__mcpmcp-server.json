{
  "name": "mcpmcp-server",
  "slug": "glenngillen__mcpmcp-server",
  "description": "Discover, setup, and integrate MCP servers with your favorite clients. Unlock the full potential of AI in your daily workflow.",
  "readme": "# mcpmcp-server\n\nDiscover, setup, and integrate MCP servers with your favorite clients. Unlock the full potential of AI in your daily workflow.\n\n## Installation/usage:\n\nUpdate the configuration of your MCP client to the following: \n\n```json\n{\n  \"mcpServers\": {\n    \"mcpmcp\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"mcp-remote@latest\", \"https://mcpmcp.io/mcp\"]\n    }\n  }\n}\n```\n\n(**note:** this config definitely works for Claude Desktop on macOS. If you need variations for other apps or platforms check the [homepage](https://mcpmcp.io/#install)\n",
  "category": "AI Tools",
  "qualityScore": 32,
  "githubUrl": "https://github.com/glenngillen/mcpmcp-server",
  "programmingLanguage": "Unknown",
  "gitHubOrg": "glenngillen",
  "gitHubRepo": "mcpmcp-server",
  "repositoryPath": null,
  "gh_stars": 10,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "c4b3dceb1f11087d956c3c7d1f37f3ffe66fccae",
  "last_scraped_at": "2025-08-03T18:04:22.315Z",
  "implementing_tools": false,
  "implementing_prompts": false,
  "implementing_resources": false,
  "implementing_sampling": false,
  "implementing_roots": false,
  "implementing_logging": false,
  "implementing_stdio": false,
  "implementing_streamable_http": true,
  "implementing_oauth2": false,
  "configForClients": {
    "mcpServers": {
      "mcp-remote": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-remote@latest",
          "https://mcpmcp.io/mcp"
        ]
      }
    }
  },
  "configForArchestra": {
    "oauth": {
      "provider": "github",
      "required": true
    },
    "server_config": {
      "args": [
        "-y",
        "mcp-remote@latest",
        "https://mcpmcp.io/mcp"
      ],
      "command": "npx",
      "transport": "stdio"
    }
  }
}